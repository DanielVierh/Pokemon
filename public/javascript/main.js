/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scss/style.scss":
/*!*****************************!*\
  !*** ./src/scss/style.scss ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://project-template/./src/scss/style.scss?");

/***/ }),

/***/ "./serviceWorker.js":
/*!**************************!*\
  !*** ./serviceWorker.js ***!
  \**************************/
/***/ (() => {

eval("self.addEventListener(\"install\", (event) => {\r\n\r\n})\r\nself.addEventListener(\"fetch\", (event) => {\r\n\r\n})\r\nself.addEventListener(\"activate\", (event) => {\r\n\r\n})\r\n\n\n//# sourceURL=webpack://project-template/./serviceWorker.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _serviceWorker_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../serviceWorker.js */ \"./serviceWorker.js\");\n/* harmony import */ var _serviceWorker_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_serviceWorker_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _js_store_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./js/store.js */ \"./src/js/store.js\");\n/* harmony import */ var _js_store_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_js_store_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _js_game_map1_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./js/game-map1.js */ \"./src/js/game-map1.js\");\n/* harmony import */ var _js_game_map1_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_js_game_map1_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _js_pokedex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./js/pokedex.js */ \"./src/js/pokedex.js\");\n/* harmony import */ var _js_pokedex_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_js_pokedex_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _js_catchedPokemon_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./js/catchedPokemon.js */ \"./src/js/catchedPokemon.js\");\n/* harmony import */ var _js_catchedPokemon_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_js_catchedPokemon_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _js_script_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./js/script.js */ \"./src/js/script.js\");\n/* harmony import */ var _js_script_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_js_script_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _js_battle_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./js/battle.js */ \"./src/js/battle.js\");\n/* harmony import */ var _js_battle_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_js_battle_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _scss_style_scss__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./scss/style.scss */ \"./src/scss/style.scss\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction init() {\r\n    checkServiceWorker();\r\n}\r\n\r\nfunction checkServiceWorker() {\r\n    if(\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.register(\"/Pokemon/serviceWorker.js\", { scope: \"/Pokemon/\"})\r\n        .then(()=>  console.log('ServiceWorker geladen'))\r\n        .catch((error) => console.warn(error))\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://project-template/./src/index.js?");

/***/ }),

/***/ "./src/js/battle.js":
/*!**************************!*\
  !*** ./src/js/battle.js ***!
  \**************************/
/***/ (() => {

eval("//######################################################\r\n// Variablen\r\n//######################################################\r\nlet currentWildPokemon;\r\nlet myCurrentPokemon;\r\nlet wildPokeImage = document.getElementById('imgPoke');\r\nlet wildPokeName = document.getElementById('wildPokeName');\r\nlet myPokeImage = document.getElementById('imgMyPoke');\r\nlet myPokeName = document.getElementById('myPokeName');\r\nlet wildPokemonProgress = document.getElementById('wildPokemonProgress');\r\nlet myPokemonProgress = document.getElementById('myPokemonProgress');\r\nlet myPokemonXPProgress = document.getElementById('myPokemonXPProgress');\r\nlet infoBox = document.getElementById('infoBox');\r\nlet moveButtons = document.getElementById('moveButtonCont');\r\nlet mainButtons = document.getElementById('mainButtonCont');\r\nlet myCatchedPokemons = [];\r\nlet myTeam = [];\r\nlet allMoves = [];\r\nlet facedPokemons = [];\r\nlet pokeMove;\r\nlet currentAttack;\r\nlet currentWildPokeHP;\r\nlet myCurrentPokemonHP;\r\nlet myCurrentPokemonStaticHP;\r\nlet iamExecuting = false;\r\nlet myPokeballAmount = 35;\r\nlet todayPokemons = []; // 20 Pokemon werden random mäßig erstellt\r\nconst maxPokemon = 898;\r\nconst pokemonGenerationen = {\r\n    gen1: {\r\n        start: 1,\r\n        end: 150,\r\n    },\r\n    gen2: {\r\n        start: 152,\r\n        end: 251,\r\n    },\r\n    gen3: {\r\n        start: 252,\r\n        end: 386,\r\n    },\r\n    gen4: {\r\n        start: 387,\r\n        end: 493,\r\n    },\r\n    gen5: {\r\n        start: 494,\r\n        end: 649,\r\n    },\r\n    gen6: {\r\n        start: 650,\r\n        end: 721,\r\n    },\r\n    gen7: {\r\n        start: 722,\r\n        end: 809,\r\n    },\r\n    gen8: {\r\n        start: 810,\r\n        end: 905,\r\n    },\r\n    all: {\r\n        start: 1,\r\n        end: 905,\r\n    },\r\n};\r\n\r\nlet myCurrentPokemonIndex = 0;\r\nlet variableMoveName = false;\r\nlet isHealing = false;\r\nlet avarageLevel = 0;\r\n\r\nconst pokeball = document.getElementById('pokeball');\r\nconst mainButton1 = document.getElementById('mainButton1');\r\nconst btnAttack0 = document.getElementById('btnAttack0');\r\nconst btnAttack1 = document.getElementById('btnAttack1');\r\nconst btnAttack2 = document.getElementById('btnAttack2');\r\nconst btnAttack3 = document.getElementById('btnAttack3');\r\nconst throwPokeball = document.getElementById('mainButton2');\r\nconst btn_closeActionwindow = document.getElementById('btn_closeActionwindow');\r\n\r\nconst pokemon1 = document.getElementById('teamPoke_0');\r\nconst pokemon2 = document.getElementById('teamPoke_1');\r\nconst pokemon3 = document.getElementById('teamPoke_2');\r\nconst pokemon4 = document.getElementById('teamPoke_3');\r\nconst outpPokeball = document.getElementById('outpPokeball');\r\nconst img_Animat = document.getElementById('img_Animat');\r\nconst wildPkeBattleCard = document.getElementById('wildPkeBattleCard');\r\nconst myPkeBattleCard = document.getElementById('myPkeBattleCard');\r\n\r\nlet save_Object = {\r\n    today_Date: '',\r\n    myPokemonTeam: [],\r\n    myCatchedPokemons: [],\r\n    allFacedPokemons: [],\r\n    allPokemonMoves: [],\r\n    today_Pokemons: [],\r\n    items: {\r\n        pokeballs: 60,\r\n        money: 100,\r\n        beleber: 5,\r\n        trank: 5,\r\n        bonbon: 3,\r\n    },\r\n    gen: 'all',\r\n    sound: true\r\n};\r\n\r\n\r\n\r\nif (mainButton1) {\r\n    mainButton1.addEventListener('click', () => {\r\n        pokeFight();\r\n    });\r\n}\r\n\r\nif (btnAttack0) {\r\n    btnAttack0.addEventListener('click', () => {\r\n        const btnMoveName = btnAttack0.innerText;\r\n        console.log(btnMoveName);\r\n        attackAction(btnMoveName);\r\n    });\r\n}\r\n\r\nif (btnAttack1) {\r\n    btnAttack1.addEventListener('click', () => {\r\n        const btnMoveName = btnAttack1.innerText;\r\n        attackAction(btnMoveName);\r\n    });\r\n}\r\n\r\nif (btnAttack2) {\r\n    btnAttack2.addEventListener('click', () => {\r\n        const btnMoveName = btnAttack2.innerText;\r\n        attackAction(btnMoveName);\r\n    });\r\n}\r\n\r\nif (btnAttack3) {\r\n    btnAttack3.addEventListener('click', () => {\r\n        const btnMoveName = btnAttack3.innerText;\r\n        attackAction(btnMoveName);\r\n    });\r\n}\r\n\r\n// Werfe Pokeball\r\nif (throwPokeball) {\r\n    throwPokeball.addEventListener('click', () => {\r\n        if (myCurrentPokemonHP > 0) {\r\n            catchPokemon();\r\n        }\r\n    });\r\n}\r\n\r\nif (btn_closeActionwindow) {\r\n    btn_closeActionwindow.addEventListener('click', () => {\r\n        moveButtons.hidden = true;\r\n        mainButtons.hidden = false;\r\n    });\r\n}\r\n\r\n//######################################################\r\n// Klassen\r\n//######################################################\r\nclass Pokemon {\r\n    constructor(\r\n        id,\r\n        name,\r\n        type,\r\n        level,\r\n        allMoves,\r\n        moves,\r\n        spriteFront,\r\n        spriteBack,\r\n        statAttack,\r\n        statDefense,\r\n        specialDefense,\r\n        xp,\r\n        hp,\r\n        maxHp,\r\n        unique_ID,\r\n    ) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.type = type;\r\n        this.level = level;\r\n        this.allMoves = allMoves;\r\n        this.moves = moves;\r\n        this.spriteFront = spriteFront;\r\n        this.spriteBack = spriteBack;\r\n        this.statAttack = statAttack;\r\n        this.statDefense = statDefense;\r\n        this.specialDefense = specialDefense;\r\n        this.xp = xp;\r\n        this.hp = hp;\r\n        this.maxHp = maxHp;\r\n        this.unique_ID = uniqueID_Generator();\r\n    }\r\n    isDefeated = false;\r\n}\r\n\r\nclass PokeMove {\r\n    constructor(\r\n        name,\r\n        germanName,\r\n        descr,\r\n        accuracy,\r\n        baseDamage,\r\n        minHits,\r\n        maxHits,\r\n        pp,\r\n        type,\r\n        healing,\r\n    ) {\r\n        (this.name = name),\r\n            (this.germanName = germanName),\r\n            (this.descr = descr),\r\n            (this.accuracy = accuracy),\r\n            (this.baseDamage = baseDamage),\r\n            (this.minHits = minHits),\r\n            (this.maxHits = maxHits),\r\n            (this.pp = pp),\r\n            (this.type = type);\r\n        this.healing = healing;\r\n    }\r\n}\r\n\r\nlet myStaticPokemon = new Pokemon(\r\n    6,\r\n    'Charizard',\r\n    'fire',\r\n    8,\r\n    'mega-punch',\r\n    'mega-punch',\r\n    'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/6.png',\r\n    'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/6.png',\r\n    84,\r\n    78,\r\n    0,\r\n    78,\r\n);\r\n\r\nwindow.onload = init();\r\n\r\nfunction init() {\r\n    // Check first if battle window is open\r\n    if (document.getElementById('battleTag')) {\r\n        load_SaveObj();\r\n        generate_today_Pokemons();\r\n        myPokemonProgress.value = 100;\r\n        wildPokemonProgress.value = 100;\r\n        createMyFirstPokemon();\r\n    }\r\n}\r\n\r\nfunction load_SaveObj() {\r\n    if (localStorage.getItem('stored_save_Object') != null) {\r\n        save_Object = JSON.parse(localStorage.getItem('stored_save_Object'));\r\n        facedPokemons = save_Object.allFacedPokemons;\r\n        allMoves = save_Object.allPokemonMoves;\r\n        myTeam = save_Object.myPokemonTeam;\r\n        try {\r\n            if (save_Object.allFacedPokemons.length === 0) {\r\n                createMyStarterPokemon();\r\n                createMyFirstPokemon();\r\n            }\r\n            loadMyTeam();\r\n            myPokeballAmount = save_Object.items.pokeballs;\r\n            outpPokeball.innerHTML = myPokeballAmount;\r\n        } catch (error) {\r\n            console.warn('Team konnte nicht angezeigt werden: ', error);\r\n        }\r\n    } else {\r\n        createMyStarterPokemon();\r\n        createMyFirstPokemon();\r\n    }\r\n}\r\n\r\n//######################################################\r\n// Statisches Pokemon\r\n//######################################################\r\nfunction createMyStarterPokemon() {\r\n    // Statisches Pokemon -- Arcanine\r\n    myStaticPokemon = new Pokemon(\r\n        59,\r\n        'Arcanine',\r\n        'fire',\r\n        4,\r\n        [\r\n            'headbutt',\r\n            'body-slam',\r\n            'take-down',\r\n            'double-edge',\r\n            'leer',\r\n            'bite',\r\n            'roar',\r\n            'ember',\r\n            'flamethrower',\r\n            'hyper-beam',\r\n            'strength',\r\n            'solar-beam',\r\n            'dragon-rage',\r\n            'fire-spin',\r\n            'dig',\r\n            'toxic',\r\n            'agility',\r\n            'rage',\r\n            'teleport',\r\n            'mimic',\r\n            'double-team',\r\n            'reflect',\r\n            'bide',\r\n            'fire-blast',\r\n            'swift',\r\n            'skull-bash',\r\n            'rest',\r\n            'substitute',\r\n            'thief',\r\n            'flame-wheel',\r\n            'snore',\r\n            'curse',\r\n            'reversal',\r\n            'protect',\r\n            'scary-face',\r\n            'mud-slap',\r\n            'outrage',\r\n            'endure',\r\n            'swagger',\r\n            'attract',\r\n            'sleep-talk',\r\n            'return',\r\n            'frustration',\r\n            'safeguard',\r\n            'dragon-breath',\r\n            'iron-tail',\r\n            'hidden-power',\r\n            'sunny-day',\r\n            'crunch',\r\n            'extreme-speed',\r\n            'rock-smash',\r\n            'heat-wave',\r\n            'will-o-wisp',\r\n            'facade',\r\n            'helping-hand',\r\n            'superpower',\r\n            'secret-power',\r\n            'hyper-voice',\r\n            'overheat',\r\n            'odor-sleuth',\r\n            'aerial-ace',\r\n            'howl',\r\n            'covet',\r\n            'natural-gift',\r\n            'close-combat',\r\n            'flare-blitz',\r\n            'dragon-pulse',\r\n            'giga-impact',\r\n            'thunder-fang',\r\n            'fire-fang',\r\n            'rock-climb',\r\n            'iron-head',\r\n            'captivate',\r\n            'flame-charge',\r\n            'round',\r\n            'incinerate',\r\n            'retaliate',\r\n            'bulldoze',\r\n            'wild-charge',\r\n            'snarl',\r\n            'play-rough',\r\n            'confide',\r\n            'laser-focus',\r\n            'burn-up',\r\n            'psychic-fangs',\r\n            'scorching-sands',\r\n        ],\r\n        ['will-o-wisp', 'hidden-power', 'thief', 'giga-impact', 'teleport'],\r\n        'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/59.png',\r\n        'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/59.png',\r\n        110,\r\n        80,\r\n        70,\r\n        399,\r\n        90,\r\n        90,\r\n        'rabdomVal123',\r\n    );\r\n\r\n    myStaticPokemon.catchval = {\r\n        catchLevel: 4,\r\n        catchDate: createDateFromToday(),\r\n        catchName: 'Arcanine'\r\n    },\r\n    save_Object.myPokemonTeam.push(myStaticPokemon);\r\n    save_Object.myCatchedPokemons.push(myStaticPokemon);\r\n    save_SaveObj();\r\n    createMyPokemon();\r\n}\r\n\r\nfunction createMyFirstPokemon() {\r\n    let nextAvailablePokemon = 0;\r\n    for (let i = 0; i < myTeam.length; i++) {\r\n        if (myTeam[i].isDefeated === false) {\r\n            nextAvailablePokemon = i;\r\n            break;\r\n        }\r\n    }\r\n    try {\r\n        const choosenPokemon = myTeam[nextAvailablePokemon];\r\n        if (choosenPokemon.isDefeated === false) {\r\n            myCurrentPokemonIndex = nextAvailablePokemon;\r\n            chooseNewPokemon(choosenPokemon);\r\n            showInfoBox(\r\n                `Los ${makeFirstLetterBig(\r\n                    choosenPokemon.name,\r\n                )}. Du schaffst das`,\r\n            );\r\n        } else {\r\n            alert(\r\n                'Ein besiegtes Pokemon kann nicht in den Kampf geschickt werden',\r\n            );\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction save_SaveObj() {\r\n    localStorage.setItem('stored_save_Object', JSON.stringify(save_Object));\r\n    console.log('SaveObj', save_Object);\r\n}\r\n\r\n//myPokemonTeam\r\nfunction loadMyTeam() {\r\n    let levelSum = 0;\r\n    for (let i = 0; i < myTeam.length; i++) {\r\n        document.getElementById(`teamPoke_${i}`).src = myTeam[i].spriteFront;\r\n        levelSum = levelSum += myTeam[i].level;\r\n        if (myTeam[i].isDefeated === true) {\r\n            document.getElementById(`teamPoke_${i}`).classList.add('defeat');\r\n        }\r\n    }\r\n    // Durchschnittslevel berechnen\r\n    avarageLevel = parseInt(levelSum / myTeam.length);\r\n}\r\n\r\n// Funktion erstellt zufällig 25 Pokemon. Diese sollen für einen Tag abgespeichert\r\n// werden und die möglichen Pokemon bildem, denen man begegnen kann\r\n\r\nfunction generate_today_Pokemons() {\r\n    if (today_equal_savedDay() === true) {\r\n        todayPokemons = save_Object.today_Pokemons;\r\n        createWildPokemon();\r\n    } else {\r\n        let min = 1;\r\n        let max = 850;\r\n        // Try to set the selected generation\r\n        try {\r\n            const savedGen = save_Object.gen;\r\n            const genRange = pokemonGenerationen[savedGen];\r\n            min = genRange.start;\r\n            max = genRange.end;\r\n        } catch (error) {\r\n            console.warn('Gen Error: ', error);\r\n        }\r\n\r\n        for (let i = 1; i <= 30; i++) {\r\n            const randomPokemon = Math.floor(Math.random() * max) + min;\r\n            todayPokemons.push(randomPokemon);\r\n        }\r\n        save_Object.today_Pokemons = todayPokemons;\r\n        save_Object.today_Date = createDateFromToday();\r\n        save_SaveObj();\r\n        createWildPokemon();\r\n    }\r\n}\r\n\r\n\r\nfunction today_equal_savedDay() {\r\n    const checkDay = save_Object.today_Date;\r\n    const today = createDateFromToday();\r\n\r\n    if (checkDay === today) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction createDateFromToday() {\r\n    const date = new Date();\r\n    const day = addZero(date.getDate());\r\n    const month = addZero(date.getMonth() + 1);\r\n    const year = date.getFullYear();\r\n    const today = `${day}.${month}.${year}`;\r\n    return today;\r\n}\r\n\r\nfunction addZero(val) {\r\n    if (val < 10) {\r\n        val = `0${val}`;\r\n    }\r\n    return val;\r\n}\r\n\r\nfunction currentRandomPokemon() {\r\n    const randomPokemon = parseInt(Math.random() * todayPokemons.length + 1);\r\n    fetchPokemon(todayPokemons[randomPokemon]);\r\n}\r\n\r\nfunction uniqueID_Generator() {\r\n    const rndStuff = [\r\n        'A',\r\n        'B',\r\n        'C',\r\n        'D',\r\n        'E',\r\n        'F',\r\n        'G',\r\n        'H',\r\n        'I',\r\n        'J',\r\n        'K',\r\n        'L',\r\n        'M',\r\n        'N',\r\n        'O',\r\n        'P',\r\n        'Q',\r\n        'R',\r\n        'S',\r\n        'T',\r\n        'U',\r\n        'V',\r\n        'W',\r\n        'X',\r\n        'Y',\r\n        'Z',\r\n        '$',\r\n        '!',\r\n        '1',\r\n        '2',\r\n        '3',\r\n        '4',\r\n        '8',\r\n        '7',\r\n        '6',\r\n        '5',\r\n        '9',\r\n        '0',\r\n        '#',\r\n    ];\r\n    let key = '';\r\n    for (let i = 1; i <= 36; i++) {\r\n        key += rndStuff[parseInt(Math.random() * rndStuff.length)];\r\n    }\r\n    return key;\r\n}\r\n\r\n//######################################################\r\n// Mein Pokemon rendern\r\n//######################################################\r\nfunction createMyPokemon() {\r\n    myPokeImage.src = myStaticPokemon.spriteBack;\r\n    myCurrentPokemonHP = myStaticPokemon.hp;\r\n    myCurrentPokemonStaticHP = myStaticPokemon.maxHp;\r\n    myPokeName.innerHTML = `${makeFirstLetterBig(myStaticPokemon.name)} | Lv.${\r\n        myStaticPokemon.level\r\n    } -- KP.${myStaticPokemon.hp}`;\r\n    console.log('MyCreated', myStaticPokemon);\r\n}\r\n\r\n//######################################################\r\n// Erstellt Zufallszahl und checkt, ob ID bereits im Array FacedPokemons gespeichert ist,\r\n// wenn nein, Fetch Request an Poke API\r\n//######################################################\r\nfunction createWildPokemon() {\r\n    let randomPokemon = parseInt(Math.random() * todayPokemons.length);\r\n    randomPokemon = todayPokemons[randomPokemon];\r\n    let foundIdInFacedPokemonArray = false;\r\n    // ? Checke FacedPokemon Array\r\n    console.log('facedPokemons', facedPokemons);\r\n    for (let i = 0; i < facedPokemons.length; i++) {\r\n        if (randomPokemon === facedPokemons[i].id) {\r\n            const all_moves = facedPokemons[i].allMoves;\r\n            let four_moves = [];\r\n            for (let i = 0; i <= 4; i++) {\r\n                const randomMove =\r\n                    Math.floor(Math.random() * all_moves.length + 1);\r\n                four_moves.push(all_moves[randomMove]);\r\n            }\r\n            currentWildPokemon = new Pokemon(\r\n                facedPokemons[i].id,\r\n                makeFirstLetterBig(facedPokemons[i].name),\r\n                facedPokemons[i].type,\r\n                parseInt(Math.random() * avarageLevel) + 3,\r\n                facedPokemons[i].allMoves,\r\n                four_moves,\r\n                facedPokemons[i].spriteFront,\r\n                facedPokemons[i].spriteBack,\r\n                facedPokemons[i].statAttack,\r\n                facedPokemons[i].statDefense,\r\n                facedPokemons[i].specialDefense,\r\n                facedPokemons[i].xp,\r\n                facedPokemons[i].hp,\r\n                facedPokemons[i].maxHp,\r\n            );\r\n\r\n            wildPokeImage.src = currentWildPokemon.spriteFront;\r\n            // wildPokeImage.style.opacity = \"1\";\r\n            wildPokeName.innerHTML = `${makeFirstLetterBig(\r\n                currentWildPokemon.name,\r\n            )} | Lv. ${currentWildPokemon.level} -- KP.${\r\n                currentWildPokemon.hp\r\n            }`;\r\n            currentWildPokeHP = currentWildPokemon.hp;\r\n            console.log('Found Pokemon in FacedPokemons', currentWildPokemon);\r\n            foundIdInFacedPokemonArray = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    // Pokemon nicht im Array facedPokemons enthalten, also Fetch Req\r\n    if (foundIdInFacedPokemonArray === false) {\r\n        console.log('Nicht gefunden also fetchPokemon mit ID ', randomPokemon);\r\n        fetchPokemon(randomPokemon);\r\n    }\r\n}\r\n\r\n//######################################################\r\n// Fetch Request an Poke API. Kann mittels ID oder Name übergeben werden\r\n//######################################################\r\n\r\nfunction fetchPokemon(id) {\r\n    fetch(`https://pokeapi.co/api/v2/pokemon/${id}/`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            console.log('data', data);\r\n            let x_moves = [];\r\n            for (let i = 0; i < data.moves.length; i++) {\r\n                x_moves.push(data.moves[i].move.name);\r\n            }\r\n            let four_moves = [];\r\n            for (let i = 0; i <= 4; i++) {\r\n                const randomMove =\r\n                    Math.floor(Math.random() * (data.moves.length - 1)) + 1;\r\n                four_moves.push(data.moves[randomMove].move.name);\r\n            }\r\n            currentWildPokemon = new Pokemon(\r\n                data.id,\r\n                data.name,\r\n                data.types[0].type.name,\r\n                parseInt(Math.random() * 20) + 3,\r\n                x_moves,\r\n                four_moves,\r\n                data.sprites.front_default,\r\n                data.sprites.back_default,\r\n                data.stats[1].base_stat,\r\n                data.stats[2].base_stat,\r\n                data.stats[4].base_stat,\r\n                data.base_experience,\r\n                data.stats[0].base_stat,\r\n                data.stats[0].base_stat,\r\n            );\r\n            console.log('currentWildPokemon', currentWildPokemon);\r\n            // Wildes Pokemon rendern\r\n            wildPokeImage.src = currentWildPokemon.spriteFront;\r\n            wildPokeImage.style.opacity = '1';\r\n            wildPokeName.innerHTML = `${makeFirstLetterBig(\r\n                currentWildPokemon.name,\r\n            )} | Lv. ${currentWildPokemon.level} -- KP.${\r\n                currentWildPokemon.hp\r\n            }`;\r\n            currentWildPokeHP = currentWildPokemon.hp;\r\n            showInfoBox(\r\n                `Ein wildes ${makeFirstLetterBig(\r\n                    currentWildPokemon.name,\r\n                )} erscheint`,\r\n            );\r\n            // Pokemon auf dem Gerät abspeichern, um beim nächsten mal keinen erneuten Fetch Request auszulösen\r\n            save_Object.allFacedPokemons.push(currentWildPokemon);\r\n            save_SaveObj();\r\n        })\r\n        .catch((error) => {\r\n            console.warn(error);\r\n            createWildPokemon();\r\n        });\r\n}\r\n\r\n//######################################################\r\n// Wichtige Informationen einer Attacke fetchen und ganze Attacke abspeichern\r\n//######################################################\r\nfunction fetchAttack(nameId) {\r\n    fetch(`https://pokeapi.co/api/v2/move/${nameId}/`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            console.log('Move', data);\r\n            pokeMove = new PokeMove(\r\n                data.name,\r\n                data.names[4].name,\r\n                0,\r\n                data.accuracy,\r\n                data.power,\r\n                data.meta.minHits,\r\n                data.meta.maxHits,\r\n                data.pp,\r\n                data.type.name,\r\n                data.meta.healing,\r\n            );\r\n            // In alle Attacken abspeichern\r\n            save_Object.allPokemonMoves.push(pokeMove);\r\n            allMoves.push(pokeMove);\r\n            save_SaveObj();\r\n        });\r\n}\r\n\r\n//######################################################\r\n\r\n//######################################################\r\nfunction init_Move(moveName) {\r\n    let foundMoveInAllMoves = false;\r\n    // Checke Attacke im Attacken Array\r\n    for (let i = 0; i < allMoves.length; i++) {\r\n        if (moveName === allMoves[i].name) {\r\n            currentAttack = new PokeMove(\r\n                allMoves[i].name,\r\n                allMoves[i].germanName,\r\n                0,\r\n                allMoves[i].accuracy,\r\n                allMoves[i].baseDamage,\r\n                allMoves[i].minHits,\r\n                allMoves[i].maxHits,\r\n                allMoves[i].pp,\r\n                allMoves[i].type,\r\n                allMoves[i].healing,\r\n            );\r\n            console.log('GeladenMove:', allMoves);\r\n            foundMoveInAllMoves = true;\r\n            pokeMove = currentAttack;\r\n        }\r\n    }\r\n\r\n    if (foundMoveInAllMoves === false) {\r\n        fetchAttack(moveName);\r\n    }\r\n\r\n    setTimeout(() => {\r\n        myPokemonAttack('myPokemon');\r\n    }, 1000);\r\n}\r\n\r\n//######################################################\r\n// Quelle: https://www.pokewiki.de/Schaden\r\n// Formel für Schadensberechnung\r\n// Schaden=⌊((Level⋅25+2)⋅Basisschaden⋅(Sp.) Angr.50⋅(Sp.) Vert.⋅F1+2)⋅Volltreffer⋅F2⋅Z100⋅STAB⋅Typ1⋅Typ2⋅F3⌋\r\n//!!!!!\r\n// Schaden = ((angriffPokeLevel * 40% + 2) * baseDamage * (angriffstatAttack / 50 + VertPokestatDefense) * 1 + 2) * Volltreffer * F2 * (Z / 100) * 1.5 * Typverrechnung\r\n// [((lv 25 * 40% + 2) * tackle=40 (Glurak Angr 84 / 50 + Magneton Vert 95) * 3) * 1,1 * (95 / 100) * 1,5] *  WertAusTypvergl=FeuerVsElektro=1\r\n// ((12) * 40 * (0,58) * 3)) * 1,1 * (0,95) * 1,5 * 1 = 1.309\r\n//!!!!!\r\n// Level gibt das aktuelle Level des Angreifers an und kann dementsprechend zwischen 1 und 100 variieren.\r\n// (Sp.-)Angr. gibt allgemein den Angriffs- bzw. Spezial-Angriffs-Wert des Angreifers an\r\n// Volltreffer ist für gewöhnlich 1 (Berechnung aus Accuracy)\r\n// Z ist ein Wert, der berechnet wird, indem von 100 eine zufällige Zahl zwischen 0 und 15 abgezogen wird\r\n// F2 zwischen 1 und 1,3\r\n\r\n// Die Bezeichnungen Typ1 und Typ2 stellen die Effektivität der genutzten Attacke auf das Ziel dar. Ist die Attacke nicht sehr effektiv gegenüber dem Typen des Ziels,\r\n// ist der Faktor 0,5, ist er sehr effektiv, wird 2 eingesetzt und hat sie keinen Einfluss auf den Gegner, so wird 0 eingesetzt. In allen anderen Fällen wird 1 eingesetzt\r\n//######################################################\r\nfunction myPokemonAttack(whoIsExecuting) {\r\n    // Initwerte sind so eingestellt, dass ein Angriff von meinem Pokemon aus geht\r\n    let lv = myStaticPokemon.level;\r\n    let defPokeLv = currentWildPokemon.level;\r\n    let attbaseDamage = pokeMove.baseDamage;\r\n    let attackVal = myStaticPokemon.statAttack;\r\n    let defenceVal = currentWildPokemon.statDefense;\r\n    let specialDefenseVal = currentWildPokemon.specialDefense;\r\n    const f2 = Math.random() * (1.3 - 1) + 1;\r\n    const z = 100 - parseInt(Math.random() * 15 + 1);\r\n    const healVal = pokeMove.healing;\r\n    console.log('healVal', healVal);\r\n    let attackType = pokeMove.type;\r\n    let defPokeType = currentWildPokemon.type;\r\n    const typeCalc = checkPokeTypes(attackType, defPokeType); // Typ Attacke wird mit Typ verteidigendesPokemon verglichen 0x / 0.5x / 1x / 2x --TODO: Funktion für den Vergleich bauen\r\n    let whoIsAffected = 'wildPokemon';\r\n    variableMoveName = false;\r\n    isHealing = false;\r\n\r\n    // Wenn wildes Pokemon angreift\r\n    if (whoIsExecuting === 'wildPokemon') {\r\n        // Wenn Basedamage = 0 soll per zufall tackle ausgeführt werden\r\n        if (attbaseDamage === null && randomize()) {\r\n            attackType = 'normal';\r\n            attbaseDamage = 50;\r\n            variableMoveName = true;\r\n        }\r\n\r\n        lv = currentWildPokemon.level;\r\n        defPokeLv = myStaticPokemon.level;\r\n        attackVal = currentWildPokemon.statAttack;\r\n        defenceVal = myStaticPokemon.statDefense;\r\n        specialDefenseVal = myStaticPokemon.specialDefense;\r\n        defPokeType = myStaticPokemon.type;\r\n        whoIsAffected = 'myPokemon';\r\n    } else {\r\n    }\r\n\r\n    // Grundsätzliche Berechnung des Schadens\r\n    // Am 13.12 abgeändert, (lv * 0.4_Auf_0,2 + 2)\r\n    const rawDamage =\r\n        (lv * 0.2 + 2) *\r\n        attbaseDamage *\r\n        (attackVal / (defenceVal + 50 + defPokeLv + specialDefenseVal)) *\r\n        3 *\r\n        f2 *\r\n        (z / 100);\r\n\r\n    const damage = parseInt((rawDamage * typeCalc) / 20);\r\n\r\n    //Todo:  Wenn Heil Move verwendet\r\n    if (healVal != undefined && healVal > 0) {\r\n        isHealing = true;\r\n    }\r\n\r\n    // Wenn wildes Pokemon am Zug ist\r\n    if (whoIsExecuting === 'wildPokemon') {\r\n        myCurrentPokemonHP -= damage;\r\n        if (damage > 0) {\r\n            myPokeImage.classList.add('getAttacked');\r\n            setTimeout(() => {\r\n                myPokeImage.classList.remove('getAttacked');\r\n            }, 600);\r\n        }\r\n    } else {\r\n        currentWildPokeHP -= damage;\r\n        if (damage > 0) {\r\n            img_Animat.classList.add('active');\r\n            setTimeout(() => {\r\n                img_Animat.classList.remove('active');\r\n            }, 300);\r\n            wildPokeImage.classList.add('getAttacked');\r\n            setTimeout(() => {\r\n                wildPokeImage.classList.remove('getAttacked');\r\n            }, 600);\r\n        }\r\n    }\r\n    animateProgressBar(damage, whoIsAffected, healVal);\r\n}\r\n\r\n//######################################################\r\n\r\n//######################################################\r\nfunction animateProgressBar(damage, whoIsAffected, healVal) {\r\n    let fullHP = currentWildPokemon.maxHp;\r\n    let currentHP = currentWildPokeHP;\r\n    let hpInPercent = parseInt((currentHP * 100) / fullHP);\r\n    let effectedImage = wildPokeImage;\r\n    let effectedPokeName = wildPokeName;\r\n    let effectedProgressbar = wildPokemonProgress;\r\n    let atackerPokemon = myStaticPokemon;\r\n    let defenderPokemon = currentWildPokemon;\r\n\r\n    if (whoIsAffected === 'myPokemon') {\r\n        fullHP = myCurrentPokemonStaticHP;\r\n        currentHP = myCurrentPokemonHP;\r\n        hpInPercent = parseInt((currentHP * 100) / fullHP);\r\n        effectedImage = myPokeImage;\r\n        effectedPokeName = myPokeName;\r\n        effectedProgressbar = myPokemonProgress;\r\n        atackerPokemon = currentWildPokemon;\r\n        defenderPokemon = myStaticPokemon;\r\n    }\r\n\r\n    // Balken anzeigen\r\n    if (hpInPercent <= 0) {\r\n        effectedProgressbar.style.width = 0;\r\n    } else {\r\n        if (damage > 0) {\r\n            //!####################################################\r\n            // init_downgrading_Kp(hpInPercent,currentHP,effectedProgressbar)\r\n            effectedProgressbar.value = hpInPercent;\r\n        }\r\n    }\r\n\r\n    // Auswirkungsanzeige\r\n    setTimeout(() => {\r\n        // Textbox\r\n        if (hpInPercent <= 0) {\r\n            // Textbox\r\n            showInfoBox(\r\n                `${makeFirstLetterBig(defenderPokemon.name)} wurde besiegt`,\r\n            );\r\n            // Besiegtes Pokemon verschwindet\r\n            effectedImage.classList.add('getDestroyed');\r\n            setTimeout(() => {\r\n                effectedImage.style.opacity = '0';\r\n                effectedPokeName.innerHTML = '';\r\n                if (whoIsAffected === 'myPokemon') {\r\n                    myPokemonXPProgress.style.width = '0%';\r\n                    save_Object.myPokemonTeam[\r\n                        myCurrentPokemonIndex\r\n                    ].isDefeated = true;\r\n                    document\r\n                        .getElementById(`teamPoke_${myCurrentPokemonIndex}`)\r\n                        .classList.add('defeat');\r\n                    save_SaveObj();\r\n                }\r\n            }, 400);\r\n        } else {\r\n            if (variableMoveName === false) {\r\n                showInfoBox(\r\n                    `${makeFirstLetterBig(\r\n                        atackerPokemon.name,\r\n                    )} führt \"${makeFirstLetterBig(\r\n                        pokeMove.name,\r\n                    )}\" aus und richtet ${damage} Schaden an.`,\r\n                );\r\n            } else {\r\n                showInfoBox(\r\n                    `${makeFirstLetterBig(\r\n                        atackerPokemon.name,\r\n                    )} führt \"Tackle\" aus und richtet ${damage} Schaden an.`,\r\n                );\r\n            }\r\n\r\n            effectedPokeName.innerHTML = `${makeFirstLetterBig(\r\n                defenderPokemon.name,\r\n            )} | Lv. ${defenderPokemon.level} | KP.${currentHP}`;\r\n        }\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n        checkWhoExecuteNext();\r\n    }, 2000);\r\n}\r\n\r\n//###############################################################################################\r\n// Statusbar Animation\r\nlet kp_value = 100;\r\nlet intv = undefined;\r\n\r\n// function init_downgrading_Kp(targetValue, old_kp_value, effectedProgressbar) {\r\n//     kp_value = old_kp_value;\r\n//     intv = setInterval(function () { countingDown(targetValue); }, 17);\r\n//     console.log('targetValue', targetValue);\r\n//     console.log('old_kp_value', old_kp_value);\r\n//     console.log('effectedProgressbar', effectedProgressbar);\r\n// }\r\n\r\n// function countingDown(targetValue,effectedProgressbar) {\r\n//     kp_value--;\r\n//     if (kp_value === targetValue) {\r\n//         clearInterval(intv);\r\n//         kp_value = targetValue;\r\n//     }\r\n//     console.log(kp_value);\r\n//     effectedProgressbar.style.width = kp_value;\r\n//     // effectedProgressbar.value = kp_value;\r\n//     // tempLabel.innerText = `${kp_value}°C`;\r\n// }\r\n//###############################################################################################\r\n\r\n// Gameloop\r\nfunction checkWhoExecuteNext() {\r\n    if (iamExecuting === true) {\r\n        enableMainButtons();\r\n        iamExecuting = false;\r\n        wildPkeBattleCard.classList.remove('active');\r\n        myPkeBattleCard.classList.add('active');\r\n    } else {\r\n        disableMainButtons();\r\n        ki_Move();\r\n        iamExecuting = true;\r\n        myPkeBattleCard.classList.remove('active');\r\n        wildPkeBattleCard.classList.add('active');\r\n    }\r\n}\r\n\r\n//######################################################\r\n\r\n//######################################################\r\n\r\nfunction ki_Move() {\r\n    if (currentWildPokeHP > 0) {\r\n        const randomMove = parseInt(\r\n            Math.random() * currentWildPokemon.moves.length,\r\n        );\r\n        const move = currentWildPokemon.moves[randomMove];\r\n        fetchAttack(move);\r\n        setTimeout(() => {\r\n            myPokemonAttack('wildPokemon');\r\n        }, 3000);\r\n    } else {\r\n        //? Battle Szene endet hier\r\n        save_Object.myPokemonTeam[myCurrentPokemonIndex].hp = myCurrentPokemonHP;\r\n        // Speichert pro Sieg einen Geldbetrag wild pokemon lv / 2 Todo später verringern\r\n        save_Object.items.money += parseInt(currentWildPokemon.level / 2);\r\n        level_up();\r\n        setTimeout(() => {\r\n            // window.location.reload();\r\n            window.location.reload();\r\n        }, 3000);\r\n    }\r\n}\r\n\r\n//######################################################\r\n// Wildes Pokemon fangen\r\n//######################################################\r\n\r\nfunction catchPokemon() {\r\n    // Abfragen, ob man noch Pokebälle hat\r\n    if (myPokeballAmount > 0) {\r\n        myPokeballAmount--;\r\n        save_Object.items.pokeballs = myPokeballAmount;\r\n        save_SaveObj();\r\n        outpPokeball.innerHTML = myPokeballAmount;\r\n        pokeball.classList.add('active');\r\n        setTimeout(() => {\r\n            pokeball.classList.remove('active');\r\n            const fullHP = currentWildPokemon.hp;\r\n            const hpInPercent = parseInt((currentWildPokeHP * 100) / fullHP);\r\n            const catchquote = 25 + parseInt((Math.random() * hpInPercent) / 2) -\r\n                               parseInt(Math.random() * (hpInPercent + 5));\r\n\r\n            if (catchquote >= 25) {\r\n                // Unsichtbar machen\r\n                wildPokeImage.style.opacity = '0';\r\n                wildPokeName.innerHTML = '';\r\n                showInfoBox(\r\n                    `${makeFirstLetterBig(\r\n                        currentWildPokemon.name,\r\n                    )} wurde gefangen`,\r\n                );\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].hp = myCurrentPokemonHP;\r\n                level_up();\r\n\r\n                currentWildPokemon.catchval = {\r\n                    catchLevel: currentWildPokemon.level,\r\n                    catchDate: save_Object.today_Date,\r\n                    catchName: currentWildPokemon.name\r\n                }\r\n\r\n                save_Object.myCatchedPokemons.push(currentWildPokemon);\r\n                save_SaveObj();\r\n                setTimeout(() => {\r\n                    showInfoBox(`${myStaticPokemon.name} erhält 20xp`);\r\n                    // window.location.reload();\r\n                    window.location.reload();\r\n                }, 1000);\r\n            } else {\r\n                showInfoBox(\r\n                    `${makeFirstLetterBig(\r\n                        currentWildPokemon.name,\r\n                    )} lässt sich nicht fangen`,\r\n                );\r\n                checkWhoExecuteNext();\r\n            }\r\n        }, 1500);\r\n    } else {\r\n        showInfoBox(`Nicht genug Pokebälle`);\r\n    }\r\n}\r\n\r\n//######################################################\r\n// Macht den Anfangsbuchstaben groß\r\n//######################################################\r\nfunction makeFirstLetterBig(word) {\r\n    const firstLetter = word[0];\r\n    let exportword = firstLetter.toUpperCase();\r\n    for (let i = 1; i < word.length; i++) {\r\n        exportword += word[i];\r\n    }\r\n    return exportword;\r\n}\r\n\r\n//######################################################\r\n// UI Elemente\r\n//######################################################\r\nfunction showInfoBox(text) {\r\n    infoBox.hidden = false;\r\n    infoBox.innerHTML = text;\r\n    setTimeout(() => {\r\n        infoBox.hidden = true;\r\n    }, 4000);\r\n}\r\n\r\nfunction showMainButtons() {\r\n    moveButtons.hidden = true;\r\n    mainButtons.hidden = false;\r\n    disableMainButtons();\r\n}\r\n\r\nfunction showMoveButtons() {\r\n    moveButtons.hidden = false;\r\n    mainButtons.hidden = true;\r\n}\r\n\r\nfunction disableMainButtons() {\r\n    mainButtons.style.backgroundColor = 'red';\r\n    document.getElementById('mainButton1').disabled = true;\r\n    document.getElementById('mainButton2').disabled = true;\r\n}\r\n\r\nfunction enableMainButtons() {\r\n    mainButtons.style.backgroundColor = 'rgba(0, 0, 10, 0.384)';\r\n    document.getElementById('mainButton1').disabled = false;\r\n    document.getElementById('mainButton2').disabled = false;\r\n}\r\n\r\n//######################################################\r\n// Move Steuerung\r\n//######################################################\r\nfunction pokeFight() {\r\n    if (myCurrentPokemonHP > 0) {\r\n        showMoveButtons();\r\n    }\r\n}\r\n\r\nfunction attackAction(btnMoveName) {\r\n    showMainButtons(btnMoveName);\r\n    init_Move(btnMoveName);\r\n}\r\n\r\n// ########################################################\r\n// Schicke ein anderes Pokemon in den Kampf\r\nif (pokemon1) {\r\n    pokemon1.addEventListener('click', () => {\r\n        try {\r\n            try {\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].hp =\r\n                    myCurrentPokemonHP;\r\n                save_SaveObj();\r\n            } catch (error) {\r\n                console.log('Error Error', error);\r\n            }\r\n\r\n            const choosenPokemon = myTeam[0];\r\n            if (choosenPokemon.isDefeated === false) {\r\n                myCurrentPokemonIndex = 0;\r\n                chooseNewPokemon(choosenPokemon);\r\n                showInfoBox(\r\n                    `Los ${makeFirstLetterBig(\r\n                        choosenPokemon.name,\r\n                    )}. Du schaffst das`,\r\n                );\r\n                checkWhoExecuteNext();\r\n            } else {\r\n                alert(\r\n                    'Ein besiegtes Pokemon kann nicht in den Kampf geschickt werden',\r\n                );\r\n            }\r\n        } catch (error) {}\r\n    });\r\n}\r\n\r\nif (pokemon2) {\r\n    pokemon2.addEventListener('click', () => {\r\n        try {\r\n            try {\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].hp =\r\n                    myCurrentPokemonHP;\r\n                save_SaveObj();\r\n            } catch (error) {\r\n                console.log('Error Error', error);\r\n            }\r\n            const choosenPokemon = myTeam[1];\r\n            if (choosenPokemon.isDefeated === false) {\r\n                myCurrentPokemonIndex = 1;\r\n                chooseNewPokemon(choosenPokemon);\r\n                showInfoBox(\r\n                    `Los ${makeFirstLetterBig(\r\n                        choosenPokemon.name,\r\n                    )}. Du schaffst das`,\r\n                );\r\n                checkWhoExecuteNext();\r\n            } else {\r\n                alert(\r\n                    'Ein besiegtes Pokemon kann nicht in den Kampf geschickt werden',\r\n                );\r\n            }\r\n        } catch (error) {}\r\n    });\r\n}\r\n\r\nif (pokemon3) {\r\n    pokemon3.addEventListener('click', () => {\r\n        try {\r\n            try {\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].hp =\r\n                    myCurrentPokemonHP;\r\n                save_SaveObj();\r\n            } catch (error) {\r\n                console.log('Error Error', error);\r\n            }\r\n            const choosenPokemon = myTeam[2];\r\n            if (choosenPokemon.isDefeated === false) {\r\n                myCurrentPokemonIndex = 2;\r\n                chooseNewPokemon(choosenPokemon);\r\n                showInfoBox(\r\n                    `Los ${makeFirstLetterBig(\r\n                        choosenPokemon.name,\r\n                    )}. Du schaffst das`,\r\n                );\r\n                checkWhoExecuteNext();\r\n            } else {\r\n                alert(\r\n                    'Ein besiegtes Pokemon kann nicht in den Kampf geschickt werden',\r\n                );\r\n            }\r\n        } catch (error) {}\r\n    });\r\n}\r\n\r\nif (pokemon4) {\r\n    pokemon4.addEventListener('click', () => {\r\n        try {\r\n            try {\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].hp =\r\n                    myCurrentPokemonHP;\r\n                save_SaveObj();\r\n            } catch (error) {\r\n                console.log('Error Error', error);\r\n            }\r\n            const choosenPokemon = myTeam[3];\r\n            if (choosenPokemon.isDefeated === false) {\r\n                myCurrentPokemonIndex = 3;\r\n                chooseNewPokemon(choosenPokemon);\r\n                showInfoBox(\r\n                    `Los ${makeFirstLetterBig(\r\n                        choosenPokemon.name,\r\n                    )}. Du schaffst das`,\r\n                );\r\n                checkWhoExecuteNext();\r\n            } else {\r\n                alert(\r\n                    'Ein besiegtes Pokemon kann nicht in den Kampf geschickt werden',\r\n                );\r\n            }\r\n        } catch (error) {}\r\n    });\r\n}\r\n\r\nfunction chooseNewPokemon(choosenPokemon) {\r\n    myStaticPokemon.id = choosenPokemon.id;\r\n    myStaticPokemon.name = choosenPokemon.name;\r\n    myStaticPokemon.src = choosenPokemon.spriteBack;\r\n    myStaticPokemon.type = choosenPokemon.type;\r\n    myStaticPokemon.level = choosenPokemon.level;\r\n    myStaticPokemon.moves = choosenPokemon.moves;\r\n    myStaticPokemon.statAttack = choosenPokemon.statAttack;\r\n    myStaticPokemon.statDefense = choosenPokemon.statDefense;\r\n    myStaticPokemon.xp = choosenPokemon.xp;\r\n    myStaticPokemon.hp = choosenPokemon.hp;\r\n    myStaticPokemon.unique_ID = choosenPokemon.unique_ID;\r\n    myPokeImage.src = choosenPokemon.spriteBack;\r\n    myCurrentPokemonHP = choosenPokemon.hp;\r\n    myCurrentPokemonStaticHP = choosenPokemon.maxHp;\r\n    myPokemonXPProgress.style.width = '10%';\r\n    myPokemonXPProgress.value = myStaticPokemon.xp;\r\n    myPokemonProgress.style.width = '30%';\r\n    myPokeImage.style.opacity = '1';\r\n    const hpInPercent = parseInt(\r\n        (myCurrentPokemonHP * 100) / myCurrentPokemonStaticHP,\r\n    );\r\n    myPokemonProgress.value = hpInPercent;\r\n    myPokeName.innerHTML = `${makeFirstLetterBig(choosenPokemon.name)} | Lv.${\r\n        choosenPokemon.level\r\n    } -- KP.${choosenPokemon.hp}`;\r\n    document.getElementById('windowMenu').classList.remove('active');\r\n    // Lade Moves\r\n    for (let i = 0; i <= 3; i++) {\r\n        document.getElementById(`btnAttack${i}`).innerText =\r\n            myStaticPokemon.moves[i];\r\n    }\r\n}\r\n\r\nfunction level_up() {\r\n    const enemyLevel = currentWildPokemon.level;\r\n    let currentLevel = myStaticPokemon.level;\r\n    const oldXP = myStaticPokemon.xp;\r\n    const calcXP = Math.floor(\r\n        enemyLevel * 4 + (myStaticPokemon.hp + 160) / (currentLevel + 3),\r\n    );\r\n    const newXP = oldXP + calcXP;\r\n    let pokemonIndex = -1;\r\n    for (let i = 0; i < save_Object.myCatchedPokemons.length; i++) {\r\n        if (\r\n            myStaticPokemon.unique_ID ===\r\n            save_Object.myCatchedPokemons[i].unique_ID\r\n        ) {\r\n            pokemonIndex = i;\r\n            console.log('Gefunden', pokemonIndex);\r\n            break;\r\n        }\r\n    }\r\n    if (oldXP <= 400) {\r\n        if (newXP > 400) {\r\n            const newLevel = currentLevel++;\r\n            const levelDevideBy5 = currentLevel % 5;\r\n            const evolveLevel = currentLevel % 11;\r\n            let newAttackMessage = '';\r\n            let newAttackName = '';\r\n            //#####################################################################\r\n            // ? Wenn Level 5 Modulus = 0, soll neue Attacke gelernt werden\r\n            //#####################################################################\r\n            if (levelDevideBy5 === 0) {\r\n                const pokemonId =\r\n                    save_Object.myPokemonTeam[myCurrentPokemonIndex].id;\r\n                let newAttackIndex = -1;\r\n                let moveArr = '';\r\n                try {\r\n                    newAttackIndex =\r\n                        save_Object.myCatchedPokemons[pokemonIndex].moves\r\n                            .length;\r\n                    moveArr =\r\n                        save_Object.myCatchedPokemons[pokemonIndex].allMoves;\r\n                    newAttackName = moveArr[newAttackIndex];\r\n                    newAttackMessage = `${makeFirstLetterBig(\r\n                        myStaticPokemon.name,\r\n                    )} lernt ${newAttackName}`;\r\n                    save_Object.myCatchedPokemons[pokemonIndex].moves.push(\r\n                        newAttackName,\r\n                    );\r\n                } catch (error) {\r\n                    console.warn('New Move Error', error);\r\n                }\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].level =\r\n                    currentLevel;\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].xp = 0;\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].hp += 1;\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].maxHp += 1;\r\n                save_Object.myPokemonTeam[\r\n                    myCurrentPokemonIndex\r\n                ].statAttack += 1;\r\n                save_Object.myPokemonTeam[\r\n                    myCurrentPokemonIndex\r\n                ].statDefense += 1;\r\n                save_Object.myCatchedPokemons[pokemonIndex].xp = 0;\r\n                save_Object.myCatchedPokemons[pokemonIndex].level =\r\n                    currentLevel;\r\n                save_Object.myCatchedPokemons[pokemonIndex].maxHp += 1;\r\n                save_Object.myCatchedPokemons[pokemonIndex].hp += 1;\r\n                save_Object.myCatchedPokemons[pokemonIndex].statAttack += 1;\r\n                save_Object.myCatchedPokemons[pokemonIndex].statDefense += 1;\r\n                myPokemonXPProgress.value = myStaticPokemon.xp;\r\n                save_SaveObj();\r\n                showInfoBox(`${makeFirstLetterBig(\r\n                    myStaticPokemon.name,\r\n                )} erreicht Level ${currentLevel} <br>\r\n                    Gesundheit: + 1 <br>\r\n                    Angriff: + 1 <br>\r\n                    Verteidigung: + 1 <br>\r\n                    ${newAttackMessage}`);\r\n                setTimeout(() => {\r\n                    myPokeName.innerHTML = `${makeFirstLetterBig(\r\n                        myStaticPokemon.name,\r\n                    )} | Lv.${currentLevel} -- KP.${myStaticPokemon.hp}`;\r\n                }, 1000);\r\n                //#####################################################################\r\n                // ? Leveln inklusive Evolution !!!\r\n                //#####################################################################\r\n            }else if(evolveLevel === 0) {\r\n                const oldID = myStaticPokemon.id;\r\n                let evolveToId = 0;\r\n                let evolvedName = '';\r\n                let evolve_spriteFront = '';\r\n                let evolve_spriteBack = '';\r\n\r\n                fetch(`https://pokeapi.co/api/v2/pokemon-species/${myStaticPokemon.name}/`)\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    fetch(data.evolution_chain.url)\r\n                        .then((res) => res.json())\r\n                        .then((data2) => {\r\n                            const fetchNewPokemonUrl =\r\n                                data2.chain.evolves_to[0].species.url;\r\n                            fetch(fetchNewPokemonUrl)\r\n                                .then((res) => res.json())\r\n                                .then((data3) => {\r\n                                     evolveToId = data3.id;\r\n                                     evolvedName = data3.name;\r\n                                    fetch(`https://pokeapi.co/api/v2/pokemon/${evolveToId}/`)\r\n                                        .then((res) => res.json())\r\n                                        .then((data4) => {\r\n                                         evolve_spriteFront = data4.sprites.front_default;\r\n                                         evolve_spriteBack = data4.sprites.back_default;\r\n                                        if(oldID !== evolveToId) {\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].spriteBack = evolve_spriteBack\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].spriteFront = evolve_spriteFront\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].id = evolveToId\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].name = evolvedName\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].spriteBack = evolve_spriteBack\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].spriteFront = evolve_spriteFront\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].id = evolveToId\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].name = evolvedName\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].level = currentLevel;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].xp = 0;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].hp += 1;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].maxHp += 1;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].statAttack += 1;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].statDefense += 1;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].xp = 0;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].level = currentLevel;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].maxHp += 1;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].hp += 1;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].statAttack += 1;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].statDefense += 1;\r\n                                            myPokemonXPProgress.value = myStaticPokemon.xp;\r\n                                            save_SaveObj();\r\n                                            alert(`Wow, ${makeFirstLetterBig(myStaticPokemon.name )} entwickelt sich zu ${evolvedName}`)\r\n                                            showInfoBox(`${makeFirstLetterBig(myStaticPokemon.name )} erreicht Level ${currentLevel} <br>\r\n                                            Gesundheit: + 1 <br>\r\n                                            Angriff: + 1 <br>\r\n                                            Verteidigung: + 1`);\r\n                                            setTimeout(() => {\r\n                                                myPokeName.innerHTML = `${makeFirstLetterBig(\r\n                                                    myStaticPokemon.name,\r\n                                                )} | Lv.${currentLevel} -- KP.${myStaticPokemon.hp}`;\r\n                                            }, 1000);\r\n\r\n                                        }else {\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].level = currentLevel;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].xp = 0;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].hp += 1;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].maxHp += 1;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].statAttack += 1;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].statDefense += 1;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].xp = 0;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].level = currentLevel;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].maxHp += 1;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].hp += 1;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].statAttack += 1;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].statDefense += 1;\r\n                                            myPokemonXPProgress.value = myStaticPokemon.xp;\r\n                                            save_SaveObj();\r\n                                            showInfoBox(`${makeFirstLetterBig(myStaticPokemon.name )} erreicht Level ${currentLevel} <br>\r\n                                            Gesundheit: + 1 <br>\r\n                                            Angriff: + 1 <br>\r\n                                            Verteidigung: + 1`);\r\n                                            setTimeout(() => {\r\n                                                myPokeName.innerHTML = `${makeFirstLetterBig(\r\n                                                    myStaticPokemon.name,\r\n                                                )} | Lv.${currentLevel} -- KP.${myStaticPokemon.hp}`;\r\n                                            }, 1000);\r\n                                        }\r\n                                    });\r\n                                });\r\n                        });\r\n                })\r\n                .catch((error) => {\r\n                    console.warn(error);\r\n                    save_Object.myPokemonTeam[myCurrentPokemonIndex].level = currentLevel;\r\n                    save_Object.myPokemonTeam[myCurrentPokemonIndex].xp = 0;\r\n                    save_Object.myPokemonTeam[myCurrentPokemonIndex].hp += 1;\r\n                    save_Object.myPokemonTeam[myCurrentPokemonIndex].maxHp += 1;\r\n                    save_Object.myPokemonTeam[myCurrentPokemonIndex].statAttack += 1;\r\n                    save_Object.myPokemonTeam[myCurrentPokemonIndex].statDefense += 1;\r\n                    save_Object.myCatchedPokemons[pokemonIndex].xp = 0;\r\n                    save_Object.myCatchedPokemons[pokemonIndex].level = currentLevel;\r\n                    save_Object.myCatchedPokemons[pokemonIndex].maxHp += 1;\r\n                    save_Object.myCatchedPokemons[pokemonIndex].hp += 1;\r\n                    save_Object.myCatchedPokemons[pokemonIndex].statAttack += 1;\r\n                    save_Object.myCatchedPokemons[pokemonIndex].statDefense += 1;\r\n                    myPokemonXPProgress.value = myStaticPokemon.xp;\r\n                    save_SaveObj();\r\n                    showInfoBox(`${makeFirstLetterBig(myStaticPokemon.name )} erreicht Level ${currentLevel} <br>\r\n                    Gesundheit: + 1 <br>\r\n                    Angriff: + 1 <br>\r\n                    Verteidigung: + 1`);\r\n                    setTimeout(() => {\r\n                        myPokeName.innerHTML = `${makeFirstLetterBig(\r\n                            myStaticPokemon.name,\r\n                        )} | Lv.${currentLevel} -- KP.${myStaticPokemon.hp}`;\r\n                    }, 1000);\r\n                });\r\n\r\n\r\n                //#####################################################################\r\n                // ? Normales Leveln ohne neue Attacke zu erlernen\r\n                //#####################################################################\r\n            } else {\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].level = currentLevel;\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].xp = 0;\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].hp += 1;\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].maxHp += 1;\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].statAttack += 1;\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].statDefense += 1;\r\n                save_Object.myCatchedPokemons[pokemonIndex].xp = 0;\r\n                save_Object.myCatchedPokemons[pokemonIndex].level = currentLevel;\r\n                save_Object.myCatchedPokemons[pokemonIndex].maxHp += 1;\r\n                save_Object.myCatchedPokemons[pokemonIndex].hp += 1;\r\n                save_Object.myCatchedPokemons[pokemonIndex].statAttack += 1;\r\n                save_Object.myCatchedPokemons[pokemonIndex].statDefense += 1;\r\n                myPokemonXPProgress.value = myStaticPokemon.xp;\r\n                save_SaveObj();\r\n                showInfoBox(`${makeFirstLetterBig(myStaticPokemon.name )} erreicht Level ${currentLevel} <br>\r\n                Gesundheit: + 1 <br>\r\n                Angriff: + 1 <br>\r\n                Verteidigung: + 1`);\r\n                setTimeout(() => {\r\n                    myPokeName.innerHTML = `${makeFirstLetterBig(\r\n                        myStaticPokemon.name,\r\n                    )} | Lv.${currentLevel} -- KP.${myStaticPokemon.hp}`;\r\n                }, 1000);\r\n            }\r\n        } else {\r\n            save_Object.myPokemonTeam[myCurrentPokemonIndex].xp = newXP;\r\n            save_Object.myCatchedPokemons[pokemonIndex].xp = newXP;\r\n            myPokemonXPProgress.value = myStaticPokemon.xp;\r\n            save_SaveObj();\r\n            showInfoBox(\r\n                `${makeFirstLetterBig(\r\n                    myStaticPokemon.name,\r\n                )} erhält ${calcXP} XP`,\r\n            );\r\n        }\r\n    } else if (oldXP > 400) {\r\n        const newLevel = currentLevel++;\r\n            const levelDevideBy5 = currentLevel % 5;\r\n            const evolveLevel = currentLevel % 11;\r\n            let newAttackMessage = '';\r\n            let newAttackName = '';\r\n            //#####################################################################\r\n            // ? Wenn Level 5 Modulus = 0, soll neue Attacke gelernt werden\r\n            //#####################################################################\r\n            if (levelDevideBy5 === 0) {\r\n                const pokemonId =\r\n                    save_Object.myPokemonTeam[myCurrentPokemonIndex].id;\r\n                let newAttackIndex = -1;\r\n                let moveArr = '';\r\n                try {\r\n                    newAttackIndex =\r\n                        save_Object.myCatchedPokemons[pokemonIndex].moves\r\n                            .length;\r\n                    moveArr =\r\n                        save_Object.myCatchedPokemons[pokemonIndex].allMoves;\r\n                    newAttackName = moveArr[newAttackIndex];\r\n                    newAttackMessage = `${makeFirstLetterBig(\r\n                        myStaticPokemon.name,\r\n                    )} lernt ${newAttackName}`;\r\n                    save_Object.myCatchedPokemons[pokemonIndex].moves.push(\r\n                        newAttackName,\r\n                    );\r\n                } catch (error) {\r\n                    console.warn('New Move Error', error);\r\n                }\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].level =\r\n                    currentLevel;\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].xp = 0;\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].hp += 1;\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].maxHp += 1;\r\n                save_Object.myPokemonTeam[\r\n                    myCurrentPokemonIndex\r\n                ].statAttack += 1;\r\n                save_Object.myPokemonTeam[\r\n                    myCurrentPokemonIndex\r\n                ].statDefense += 1;\r\n                save_Object.myCatchedPokemons[pokemonIndex].xp = 0;\r\n                save_Object.myCatchedPokemons[pokemonIndex].level =\r\n                    currentLevel;\r\n                save_Object.myCatchedPokemons[pokemonIndex].maxHp += 1;\r\n                save_Object.myCatchedPokemons[pokemonIndex].hp += 1;\r\n                save_Object.myCatchedPokemons[pokemonIndex].statAttack += 1;\r\n                save_Object.myCatchedPokemons[pokemonIndex].statDefense += 1;\r\n                myPokemonXPProgress.value = myStaticPokemon.xp;\r\n                save_SaveObj();\r\n                showInfoBox(`${makeFirstLetterBig(\r\n                    myStaticPokemon.name,\r\n                )} erreicht Level ${currentLevel} <br>\r\n                    Gesundheit: + 1 <br>\r\n                    Angriff: + 1 <br>\r\n                    Verteidigung: + 1 <br>\r\n                    ${newAttackMessage}`);\r\n                setTimeout(() => {\r\n                    myPokeName.innerHTML = `${makeFirstLetterBig(\r\n                        myStaticPokemon.name,\r\n                    )} | Lv.${currentLevel} -- KP.${myStaticPokemon.hp}`;\r\n                }, 1000);\r\n                //#####################################################################\r\n                // ? Leveln inklusive Evolution !!!\r\n                //#####################################################################\r\n            }else if(evolveLevel === 0) {\r\n                const oldID = myStaticPokemon.id;\r\n                let evolveToId = 0;\r\n                let evolvedName = '';\r\n                let evolve_spriteFront = '';\r\n                let evolve_spriteBack = '';\r\n\r\n                fetch(`https://pokeapi.co/api/v2/pokemon-species/${myStaticPokemon.name}/`)\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    fetch(data.evolution_chain.url)\r\n                        .then((res) => res.json())\r\n                        .then((data2) => {\r\n                            const fetchNewPokemonUrl =\r\n                                data2.chain.evolves_to[0].species.url;\r\n                            fetch(fetchNewPokemonUrl)\r\n                                .then((res) => res.json())\r\n                                .then((data3) => {\r\n                                     evolveToId = data3.id;\r\n                                     evolvedName = data3.name;\r\n                                    fetch(`https://pokeapi.co/api/v2/pokemon/${evolveToId}/`)\r\n                                        .then((res) => res.json())\r\n                                        .then((data4) => {\r\n                                         evolve_spriteFront = data4.sprites.front_default;\r\n                                         evolve_spriteBack = data4.sprites.back_default;\r\n                                        if(oldID !== evolveToId) {\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].spriteBack = evolve_spriteBack\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].spriteFront = evolve_spriteFront\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].id = evolveToId\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].name = evolvedName\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].spriteBack = evolve_spriteBack\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].spriteFront = evolve_spriteFront\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].id = evolveToId\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].name = evolvedName\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].level = currentLevel;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].xp = 0;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].hp += 1;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].maxHp += 1;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].statAttack += 1;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].statDefense += 1;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].xp = 0;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].level = currentLevel;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].maxHp += 1;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].hp += 1;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].statAttack += 1;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].statDefense += 1;\r\n                                            myPokemonXPProgress.value = myStaticPokemon.xp;\r\n                                            save_SaveObj();\r\n                                            alert(`Wow, ${makeFirstLetterBig(myStaticPokemon.name )} entwickelt sich zu ${evolvedName}`)\r\n                                            showInfoBox(`${makeFirstLetterBig(myStaticPokemon.name )} erreicht Level ${currentLevel} <br>\r\n                                            Gesundheit: + 1 <br>\r\n                                            Angriff: + 1 <br>\r\n                                            Verteidigung: + 1`);\r\n                                            setTimeout(() => {\r\n                                                myPokeName.innerHTML = `${makeFirstLetterBig(\r\n                                                    myStaticPokemon.name,\r\n                                                )} | Lv.${currentLevel} -- KP.${myStaticPokemon.hp}`;\r\n                                            }, 1000);\r\n\r\n                                        }else {\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].level = currentLevel;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].xp = 0;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].hp += 1;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].maxHp += 1;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].statAttack += 1;\r\n                                            save_Object.myPokemonTeam[myCurrentPokemonIndex].statDefense += 1;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].xp = 0;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].level = currentLevel;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].maxHp += 1;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].hp += 1;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].statAttack += 1;\r\n                                            save_Object.myCatchedPokemons[pokemonIndex].statDefense += 1;\r\n                                            myPokemonXPProgress.value = myStaticPokemon.xp;\r\n                                            save_SaveObj();\r\n                                            showInfoBox(`${makeFirstLetterBig(myStaticPokemon.name )} erreicht Level ${currentLevel} <br>\r\n                                            Gesundheit: + 1 <br>\r\n                                            Angriff: + 1 <br>\r\n                                            Verteidigung: + 1`);\r\n                                            setTimeout(() => {\r\n                                                myPokeName.innerHTML = `${makeFirstLetterBig(\r\n                                                    myStaticPokemon.name,\r\n                                                )} | Lv.${currentLevel} -- KP.${myStaticPokemon.hp}`;\r\n                                            }, 1000);\r\n                                        }\r\n                                    });\r\n                                });\r\n                        });\r\n                })\r\n                .catch((error) => {\r\n                    console.warn(error);\r\n                });\r\n\r\n\r\n                //#####################################################################\r\n                // ? Normales Leveln ohne neue Attacke zu erlernen\r\n                //#####################################################################\r\n            } else {\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].level = currentLevel;\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].xp = 0;\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].hp += 1;\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].maxHp += 1;\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].statAttack += 1;\r\n                save_Object.myPokemonTeam[myCurrentPokemonIndex].statDefense += 1;\r\n                save_Object.myCatchedPokemons[pokemonIndex].xp = 0;\r\n                save_Object.myCatchedPokemons[pokemonIndex].level = currentLevel;\r\n                save_Object.myCatchedPokemons[pokemonIndex].maxHp += 1;\r\n                save_Object.myCatchedPokemons[pokemonIndex].hp += 1;\r\n                save_Object.myCatchedPokemons[pokemonIndex].statAttack += 1;\r\n                save_Object.myCatchedPokemons[pokemonIndex].statDefense += 1;\r\n                myPokemonXPProgress.value = myStaticPokemon.xp;\r\n                save_SaveObj();\r\n                showInfoBox(`${makeFirstLetterBig(myStaticPokemon.name )} erreicht Level ${currentLevel} <br>\r\n                Gesundheit: + 1 <br>\r\n                Angriff: + 1 <br>\r\n                Verteidigung: + 1`);\r\n                setTimeout(() => {\r\n                    myPokeName.innerHTML = `${makeFirstLetterBig(\r\n                        myStaticPokemon.name,\r\n                    )} | Lv.${currentLevel} -- KP.${myStaticPokemon.hp}`;\r\n                }, 1000);\r\n            }\r\n    }\r\n}\r\n\r\nfunction checkPokeTypes(attackType, defenderType) {\r\n    console.log('attackType', attackType);\r\n    switch (attackType) {\r\n        case 'fire':\r\n            img_Animat.src = `./assets/mv_fire.png`;\r\n            break;\r\n        case 'electric':\r\n            img_Animat.src = `./assets/mv_electro.png`;\r\n            break;\r\n        case 'water':\r\n            img_Animat.src = `./assets/mv_water.png`;\r\n            break;\r\n        case 'normal':\r\n            img_Animat.src = `./assets/mv_normal2.png`;\r\n            break;\r\n        case 'rock':\r\n            img_Animat.src = `./assets/mv_rock.png`;\r\n            break;\r\n        case 'grass':\r\n            img_Animat.src = `./assets/mv_grass.png`;\r\n            break;\r\n        case 'ice':\r\n            img_Animat.src = `./assets/mv_ice.png`;\r\n            break;\r\n        case 'poison':\r\n            img_Animat.src = `./assets/mv_poison.png`;\r\n            break;\r\n        case 'dark':\r\n            img_Animat.src = `./assets/mv_dark.png`;\r\n            break;\r\n        case 'ground':\r\n            img_Animat.src = `./assets/mv_ground.png`;\r\n            break;\r\n        default:\r\n            img_Animat.src = `./assets/mv_normal.png`;\r\n            break;\r\n    }\r\n\r\n    const attackTypeValues = {\r\n        normal: {\r\n            200: [],\r\n            100: [\r\n                'normal',\r\n                'fighting',\r\n                'flying',\r\n                'poison',\r\n                'ground',\r\n                'bug',\r\n                'fire',\r\n                'water',\r\n                'grass',\r\n                'electric',\r\n                'psychic',\r\n                'ice',\r\n                'dragon',\r\n                'dark',\r\n                'fairy',\r\n            ],\r\n            50: ['rock', 'steel'],\r\n            0: ['ghost'],\r\n        },\r\n        fighting: {\r\n            200: ['normal', 'rock', 'steel', 'ice', 'dark'],\r\n            100: [\r\n                'fighting',\r\n                'ground',\r\n                'fire',\r\n                'water',\r\n                'grass',\r\n                'electric',\r\n                'dragon',\r\n            ],\r\n            50: ['flying', 'poison', 'bug', 'psychic', 'fairy'],\r\n            0: ['ghost'],\r\n        },\r\n        flying: {\r\n            200: ['fighting', 'bug', 'grass'],\r\n            100: [\r\n                'normal',\r\n                'flying',\r\n                'poison',\r\n                'ground',\r\n                'ghost',\r\n                'fire',\r\n                'water',\r\n                'psychic',\r\n                'ice',\r\n                'dragon',\r\n                'dark',\r\n                'fairy',\r\n            ],\r\n            50: ['rock', 'steel', 'electric'],\r\n            0: [],\r\n        },\r\n        poison: {\r\n            200: ['grass', 'fairy'],\r\n            100: [\r\n                'normal',\r\n                'fighting',\r\n                'flying',\r\n                'bug',\r\n                'fire',\r\n                'water',\r\n                'electric',\r\n                'psychic',\r\n                'ice',\r\n                'dragon',\r\n                'dark',\r\n            ],\r\n            50: ['poison', 'ground', 'rock', 'ghost'],\r\n            0: ['steel'],\r\n        },\r\n        ground: {\r\n            200: ['poison', 'rock', 'steel', 'fire', 'electric'],\r\n            100: [\r\n                'normal',\r\n                'fighting',\r\n                'ground',\r\n                'ghost',\r\n                'water',\r\n                'psychic',\r\n                'ice',\r\n                'dragon',\r\n                'dark',\r\n                'fairy',\r\n            ],\r\n            50: ['bug', 'grass'],\r\n            0: ['flying'],\r\n        },\r\n        rock: {\r\n            200: ['flying', 'bug', 'fire', 'ice'],\r\n            100: [\r\n                'normal',\r\n                'poison',\r\n                'rock',\r\n                'ghost',\r\n                'water',\r\n                'grass',\r\n                'electric',\r\n                'psychic',\r\n                'dragon',\r\n                'dark',\r\n                'fairy',\r\n            ],\r\n            50: ['fighting', 'ground', 'steel'],\r\n            0: [],\r\n        },\r\n        bug: {\r\n            200: ['grass', 'psychic', 'dark'],\r\n            100: [\r\n                'normal',\r\n                'ground',\r\n                'rock',\r\n                'bug',\r\n                'water',\r\n                'electric',\r\n                'ice',\r\n                'dragon',\r\n            ],\r\n            50: [\r\n                'fighting',\r\n                'flying',\r\n                'poison',\r\n                'ghost',\r\n                'steel',\r\n                'fire',\r\n                'fairy',\r\n            ],\r\n            0: [],\r\n        },\r\n        ghost: {\r\n            200: ['ghost', 'psychic'],\r\n            100: [\r\n                'fighting',\r\n                'flying',\r\n                'poison',\r\n                'ground',\r\n                'rock',\r\n                'bug',\r\n                'steel',\r\n                'fire',\r\n                'water',\r\n                'grass',\r\n                'electric',\r\n                'ice',\r\n                'dragon',\r\n                'fairy',\r\n            ],\r\n            50: ['dark'],\r\n            0: ['normal'],\r\n        },\r\n        steel: {\r\n            200: ['rock', 'ice', 'fairy'],\r\n            100: [\r\n                'normal',\r\n                'fighting',\r\n                'flying',\r\n                'poison',\r\n                'ground',\r\n                'bug',\r\n                'ghost',\r\n                'grass',\r\n                'psychic',\r\n                'dragon',\r\n                'dark',\r\n            ],\r\n            50: ['steel', 'fire', 'water', 'electric'],\r\n            0: [],\r\n        },\r\n        fire: {\r\n            200: ['bug', 'steel', 'grass', 'ice'],\r\n            100: [\r\n                'normal',\r\n                'fighting',\r\n                'flying',\r\n                'poison',\r\n                'ground',\r\n                'ghost',\r\n                'electric',\r\n                'psychic',\r\n                'dark',\r\n                'fairy',\r\n            ],\r\n            50: ['rock', 'fire', 'water', 'dragon'],\r\n            0: [],\r\n        },\r\n        water: {\r\n            200: ['ground', 'rock', 'fire'],\r\n            100: [\r\n                'normal',\r\n                'fighting',\r\n                'flying',\r\n                'poison',\r\n                'bug',\r\n                'ghost',\r\n                'steel',\r\n                'electric',\r\n                'psychic',\r\n                'ice',\r\n                'dark',\r\n                'fairy',\r\n            ],\r\n            50: ['water', 'grass', 'dragon'],\r\n            0: [],\r\n        },\r\n        grass: {\r\n            200: ['ground', 'rock', 'water'],\r\n            100: [\r\n                'normal',\r\n                'fighting',\r\n                'ghost',\r\n                'electric',\r\n                'psychic',\r\n                'ice',\r\n                'dark',\r\n                'fairy',\r\n            ],\r\n            50: ['flying', 'poison', 'bug', 'steel', 'fire', 'grass', 'dragon'],\r\n            0: [],\r\n        },\r\n        electric: {\r\n            200: ['flying', 'water'],\r\n            100: [\r\n                'normal',\r\n                'fighting',\r\n                'poison',\r\n                'rock',\r\n                'bug',\r\n                'ghost',\r\n                'steel',\r\n                'fire',\r\n                'psychic',\r\n                'ice',\r\n                'dark',\r\n                'fairy',\r\n            ],\r\n            50: ['grass', 'electric', 'dragon'],\r\n            0: ['ground'],\r\n        },\r\n        psychic: {\r\n            200: ['fighting', 'poison'],\r\n            100: [\r\n                'normal',\r\n                'flying',\r\n                'ground',\r\n                'rock',\r\n                'bug',\r\n                'ghost',\r\n                'fire',\r\n                'water',\r\n                'grass',\r\n                'electric',\r\n                'ice',\r\n                'dragon',\r\n                'fairy',\r\n            ],\r\n            50: ['steel', 'psychic'],\r\n            0: ['dark'],\r\n        },\r\n        ice: {\r\n            200: ['flying', 'ground', 'grass', 'dragon'],\r\n            100: [\r\n                'normal',\r\n                'fighting',\r\n                'poison',\r\n                'rock',\r\n                'bug',\r\n                'ghost',\r\n                'electric',\r\n                'psychic',\r\n                'dark',\r\n                'fairy',\r\n            ],\r\n            50: ['steel', 'fire', 'water', 'ice'],\r\n            0: [],\r\n        },\r\n        dragon: {\r\n            200: ['dragon'],\r\n            100: [\r\n                'normal',\r\n                'fighting',\r\n                'flying',\r\n                'poison',\r\n                'ground',\r\n                'rock',\r\n                'bug',\r\n                'ghost',\r\n                'fire',\r\n                'water',\r\n                'grass',\r\n                'electric',\r\n                'psychic',\r\n                'ice',\r\n                'dark',\r\n            ],\r\n            50: ['steel'],\r\n            0: ['fairy'],\r\n        },\r\n        dark: {\r\n            200: ['ghost', 'psychic'],\r\n            100: [\r\n                'normal',\r\n                'flying',\r\n                'poison',\r\n                'ground',\r\n                'rock',\r\n                'bug',\r\n                'steel',\r\n                'fire',\r\n                'water',\r\n                'grass',\r\n                'electric',\r\n                'ice',\r\n                'dragon',\r\n            ],\r\n            50: ['fighting', 'dark', 'fairy'],\r\n            0: [],\r\n        },\r\n        fairy: {\r\n            200: ['fighting', 'dragon', 'dark'],\r\n            100: [\r\n                'normal',\r\n                'flying',\r\n                'ground',\r\n                'rock',\r\n                'bug',\r\n                'ghost',\r\n                'water',\r\n                'grass',\r\n                'electric',\r\n                'psychic',\r\n                'ice',\r\n                'fairy',\r\n            ],\r\n            50: ['poison', 'steel', 'fire'],\r\n            0: [],\r\n        },\r\n    };\r\n\r\n    let attackTypeValue = 0;\r\n    let attackReturnValue = 0;\r\n    const keyWord = `${attackType}`;\r\n    const effectedPokemonArrays = attackTypeValues[keyWord];\r\n    for (const [key, value] of Object.entries(effectedPokemonArrays)) {\r\n        if (value.includes(defenderType)) {\r\n            attackTypeValue = parseInt(key);\r\n            parseInt(attackTypeValue);\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (attackTypeValue === 200) {\r\n        attackReturnValue = 2;\r\n    }\r\n    if (attackTypeValue === 100) {\r\n        attackReturnValue = 1;\r\n    }\r\n    if (attackTypeValue === 50) {\r\n        attackReturnValue = 0.5;\r\n    }\r\n    if (attackTypeValue === 0) {\r\n        attackReturnValue = 0;\r\n    }\r\n\r\n    return attackReturnValue;\r\n}\r\n\r\nfunction randomize() {\r\n    const randomnumber = Math.random();\r\n    if (randomnumber <= 0.5) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction fetchWunschPokemon(id) {\r\n    fetch(`https://pokeapi.co/api/v2/pokemon/${id}/`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            console.log('Wunschpokemon', data);\r\n\r\n            let x_moves = [];\r\n            for (let i = 0; i < data.moves.length; i++) {\r\n                x_moves.push(data.moves[i].move.name);\r\n            }\r\n            console.log(x_moves);\r\n        })\r\n        .catch((error) => {\r\n            console.warn(error);\r\n        });\r\n}\r\n\r\n// fetchWunschPokemon(74)\r\n// fetchWunschPokemon(75)\r\n\n\n//# sourceURL=webpack://project-template/./src/js/battle.js?");

/***/ }),

/***/ "./src/js/catchedPokemon.js":
/*!**********************************!*\
  !*** ./src/js/catchedPokemon.js ***!
  \**********************************/
/***/ (() => {

eval("let myCatchedPokemons = [];\r\nlet myTeam = [];\r\nlet pokemonByID = []\r\nlet currentDetailPokemonIndex = -1;\r\nlet newLearnedMoveIndex = -1;\r\nlet is_LearningNewMove = false;\r\n\r\nconst pokeballPrice = 10;\r\nconst trankPrice = 15;\r\nconst beleberPrice = 20;\r\nconst bonbonPrice = 50;\r\n\r\n\r\nconst catchedPokemonContaier = document.getElementById(\"catchedPokemonContaier\");\r\nconst teamPokemonContainer = document.getElementById(\"teamPokemonContainer\");\r\nconst btn_ResetGame = document.getElementById(\"btn_ResetGame\");\r\nconst btnHeal = document.getElementById(\"btnHeal\");\r\nconst cont_Detail = document.getElementById(\"cont_Detail\")\r\nconst btnCloseDetails = document.getElementById(\"btnCloseDetails\");\r\nconst lbl_Money = document.getElementById(\"lbl_Money\");\r\nconst lbl_Shop_Money = document.getElementById(\"lbl_Shop_Money\");\r\nconst shopWindow = document.getElementById(\"shopWindow\");\r\nconst btnCloseShop = document.getElementById(\"btnCloseShop\");\r\nconst btn_open_Shop = document.getElementById(\"btn_open_Shop\");\r\nconst btn_Pokeball = document.getElementById(\"btn_Pokeball\");\r\nconst lbl_Amount_Pokeballs = document.getElementById(\"lbl_Amount_Pokeballs\");\r\nconst btn_Buy = document.getElementById(\"btn_Buy\");\r\nconst setting_Gen = document.getElementById(\"setting_Gen\");\r\nconst btn_refresh_todays_Pokemon = document.getElementById(\"btn_refresh_todays_Pokemon\")\r\n\r\nconst mv_0 = document.getElementById(\"mv_0\")\r\nconst mv_1 = document.getElementById(\"mv_1\")\r\nconst mv_2 = document.getElementById(\"mv_2\")\r\nconst mv_3 = document.getElementById(\"mv_3\")\r\nconst modalMoves = document.getElementById(\"modalMoves\")\r\n\r\n\r\nlet save_Object = {\r\n    today_Date: '',\r\n    myPokemonTeam: [],\r\n    myCatchedPokemons: [],\r\n    allFacedPokemons: [],\r\n    allPokemonMoves: [],\r\n    today_Pokemons: [],\r\n    items: {\r\n        pokeballs: 60,\r\n        money: 100,\r\n        beleber: 5,\r\n        trank: 5,\r\n        bonbon: 3\r\n    },\r\n    gen: 'all'\r\n};\r\n\r\n\r\nwindow.onload = init();\r\n\r\nfunction init() {\r\n    if (document.getElementById(\"catchPokeTag\")) {\r\n        load_SaveObj();\r\n    }\r\n}\r\n\r\n\r\nfunction load_SaveObj() {\r\n    if (localStorage.getItem('stored_save_Object') != null) {\r\n        save_Object = JSON.parse(localStorage.getItem('stored_save_Object'));\r\n        myTeam = save_Object.myPokemonTeam;\r\n        myCatchedPokemons = save_Object.myCatchedPokemons;\r\n        document.getElementById(\"outpCatchedAmount\").innerHTML = `${myCatchedPokemons.length} gefangen`\r\n\r\n        pokemonByID = myCatchedPokemons.slice(0);\r\n        pokemonByID.sort(function(a,b) {\r\n            return a.id - b.id;\r\n        });\r\n\r\n        try {\r\n            renderCatchedPokemons();\r\n            renderTeam();\r\n            lbl_Money.innerHTML = `$ - ${save_Object.items.money}`;\r\n            setting_Gen.value = save_Object.gen\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n}\r\n\r\nfunction save_SaveObj() {\r\n    localStorage.setItem('stored_save_Object', JSON.stringify(save_Object));\r\n    console.log('SaveObj', save_Object);\r\n}\r\n\r\n\r\nfunction renderCatchedPokemons() {\r\n    for (let i = 0; i < pokemonByID.length; i++) {\r\n        let pokeCont = document.createElement('div');\r\n        pokeCont.classList.add(\"pokemonContaier\")\r\n\r\n        let addBtn = document.createElement(\"div\");\r\n        addBtn.innerHTML = \"+\"\r\n        addBtn.classList.add(\"addButton\")\r\n        addBtn.id = pokemonByID[i].unique_ID\r\n\r\n        for(let j = 0; j < myTeam.length; j++) {\r\n            if(pokemonByID[i].unique_ID === myTeam[j].unique_ID) {\r\n                pokeCont.classList.add('isMember')\r\n                break\r\n            }\r\n        }\r\n\r\n\r\n        let detailBtn = document.createElement(\"div\");\r\n        detailBtn.innerHTML = \"i \"\r\n        detailBtn.classList.add(\"detailBtn\")\r\n        detailBtn.id = pokemonByID[i].unique_ID\r\n\r\n        let sellBtn = document.createElement(\"div\");\r\n        sellBtn.innerHTML = \"$\"\r\n        sellBtn.classList.add(\"sellBtn\")\r\n        sellBtn.id = pokemonByID[i].unique_ID\r\n\r\n        let pokeimage = document.createElement(\"img\");\r\n        pokeimage.src = pokemonByID[i].spriteFront;\r\n\r\n        let pokename = document.createElement(\"p\");\r\n        pokename.innerHTML = makeFirstLetterBig(pokemonByID[i].name) + ` | Lv.${pokemonByID[i].level}`;\r\n\r\n        let infocont = document.createElement(\"div\");\r\n        infocont.classList.add(\"infobox\");\r\n\r\n        let level = document.createElement(\"p\");\r\n        level.innerHTML = `Lv.${pokemonByID[i].level}`;\r\n\r\n        let type = document.createElement(\"p\");\r\n        type.innerHTML = `Typ: ${makeFirstLetterBig(pokemonByID[i].type)}`;\r\n\r\n        let number = document.createElement(\"p\");\r\n        number.innerHTML = `Nr. ${pokemonByID[i].id}`;\r\n\r\n        infocont.appendChild(level)\r\n        infocont.appendChild(type)\r\n        infocont.appendChild(number)\r\n\r\n        pokeCont.appendChild(addBtn)\r\n        pokeCont.appendChild(detailBtn)\r\n        pokeCont.appendChild(sellBtn)\r\n        pokeCont.appendChild(pokeimage)\r\n        pokeCont.appendChild(pokename)\r\n        // pokeCont.appendChild(infocont)\r\n\r\n        catchedPokemonContaier.appendChild(pokeCont)\r\n    }\r\n}\r\n\r\n\r\n\r\n// Pokemon hinzufügen\r\nconst addBtn = document.querySelectorAll('.addButton');\r\nif (addBtn) {\r\n    addBtn.forEach((button) => {\r\n        button.addEventListener('click', () => {\r\n            let pokemonIndex = -1;\r\n            let addedPokemon;\r\n            for (let i = 0; i < myCatchedPokemons.length; i++) {\r\n                if (button.id === myCatchedPokemons[i].unique_ID) {\r\n                    pokemonIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Prüfen ob Pokemon gefunden\r\n            if (pokemonIndex >= 0) {\r\n                addedPokemon = myCatchedPokemons[pokemonIndex]\r\n\r\n                // check ob teamplatz frei\r\n                const freeTeamNumbers = myTeam.length;\r\n                if (freeTeamNumbers < 4) {\r\n                    let isAlreadyInTeam = false;\r\n                    for(let i = 0; i < myTeam.length; i++) {\r\n                        if(myTeam[i].unique_ID === addedPokemon.unique_ID) {\r\n                            console.log('');\r\n                            isAlreadyInTeam = true;\r\n                            break\r\n                        }\r\n                    }\r\n                    if(isAlreadyInTeam === false) {\r\n                        myTeam.unshift(addedPokemon);\r\n                        console.log(myTeam);\r\n                        save_SaveObj();\r\n                        location.reload();\r\n                    }\r\n                } else {\r\n                    alert(\"Kein Platz mehr frei\")\r\n                }\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n\r\nconst delBtn = document.querySelectorAll('.deleteButton');\r\nif (delBtn) {\r\n    delBtn.forEach((button) => {\r\n        button.addEventListener('click', () => {\r\n            let pokemonIndex = -1;\r\n            let removedPokemon;\r\n            for (let i = 0; i < myTeam.length; i++) {\r\n                if (button.id === myTeam[i].unique_ID) {\r\n                    pokemonIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (pokemonIndex >= 0) {\r\n                myTeam.splice(pokemonIndex, 1);\r\n                renderTeam();\r\n                save_SaveObj();\r\n                location.reload();\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n\r\nconst sellBtn = document.querySelectorAll('.sellBtn');\r\nif (sellBtn) {\r\n    sellBtn.forEach((button) => {\r\n        button.addEventListener('click', () => {\r\n            // Nur verkaufen, wenn mehr als 1 Pokemon vorhanden ist\r\n           if(myCatchedPokemons.length > 1) {\r\n            let pokemonIndex = -1;\r\n            for (let i = 0; i < myCatchedPokemons.length; i++) {\r\n                if (button.id === myCatchedPokemons[i].unique_ID) {\r\n                    pokemonIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (pokemonIndex >= 0) {\r\n                const pokemonPrice = parseInt(myCatchedPokemons[pokemonIndex].level * 9)\r\n                const confirmSell = window.confirm(`Möchtest du das Pokemon: \"${myCatchedPokemons[pokemonIndex].name}\" wirklich verkaufen? \\nDu erhälst dafür ${pokemonPrice}$`)\r\n                if(confirmSell) {\r\n                myCatchedPokemons.splice(pokemonIndex, 1);\r\n\r\n                 pokemonIndex = -1;\r\n                for (let i = 0; i < myTeam.length; i++) {\r\n                    if (button.id === myTeam[i].unique_ID) {\r\n                        pokemonIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                if (pokemonIndex >= 0) {\r\n                    myTeam.splice(pokemonIndex, 1);\r\n                }\r\n                save_Object.items.money += pokemonPrice;\r\n                save_SaveObj();\r\n                location.reload();\r\n                }\r\n            }\r\n           }else {\r\n            alert(\"Du benötigst mindestens 1 Pokemon\")\r\n           }\r\n        });\r\n    });\r\n}\r\n\r\n\r\nconst detailBtn = document.querySelectorAll('.detailBtn');\r\nif (detailBtn) {\r\n    detailBtn.forEach((button) => {\r\n        button.addEventListener('click', () => {\r\n            let pokemonIndex = -1;\r\n            for (let i = 0; i < myCatchedPokemons.length; i++) {\r\n                if (button.id === myCatchedPokemons[i].unique_ID) {\r\n                    pokemonIndex = i;\r\n                    currentDetailPokemonIndex = i\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (pokemonIndex >= 0) {\r\n                console.log('myCatchedPokemons[pokemonIndex]', myCatchedPokemons[pokemonIndex]);\r\n                cont_Detail.classList.add(\"active\");\r\n                document.getElementById(\"det_Pokename\").innerHTML = makeFirstLetterBig(myCatchedPokemons[pokemonIndex].name)\r\n                document.getElementById(\"det_PokemonImage\").src = myCatchedPokemons[pokemonIndex].spriteFront\r\n                document.getElementById(\"det_Attack\").innerHTML = `Angriff: ${myCatchedPokemons[pokemonIndex].statAttack}`\r\n                document.getElementById(\"det_Def\").innerHTML = `Verteidigung: ${myCatchedPokemons[pokemonIndex].statDefense}`\r\n                document.getElementById(\"det_Lv\").innerHTML = `Lv.${myCatchedPokemons[pokemonIndex].level}`\r\n                document.getElementById(\"det_HP\").innerHTML = `Max KP: ${myCatchedPokemons[pokemonIndex].maxHp}`\r\n                document.getElementById(\"det_Type\").innerHTML = `Typ: ${myCatchedPokemons[pokemonIndex].type}`\r\n                document.getElementById(\"det_Nr\").innerHTML = `Nr: ${myCatchedPokemons[pokemonIndex].id}`\r\n                document.getElementById(\"det_catchDate\").innerHTML = `Gefangen am: <br> -`\r\n                document.getElementById(\"det_catchName\").innerHTML = `Name: <br> -`\r\n                document.getElementById(\"det_catchLv\").innerHTML = `Level: <br> -`\r\n                try {\r\n                    document.getElementById(\"det_catchDate\").innerHTML = `Gefangen am: <br> ${myCatchedPokemons[pokemonIndex].catchval.catchDate}`\r\n                    document.getElementById(\"det_catchName\").innerHTML = `Name: <br> ${makeFirstLetterBig(myCatchedPokemons[pokemonIndex].catchval.catchName)}`\r\n                    document.getElementById(\"det_catchLv\").innerHTML = `Level: <br> ${myCatchedPokemons[pokemonIndex].catchval.catchLevel}`\r\n                } catch (error) { }\r\n\r\n            // moveList\r\n            const moveList = document.getElementById(\"moveList\");\r\n            moveList.innerHTML = ''\r\n            for(let i = 0; i < myCatchedPokemons[pokemonIndex].moves.length; i++) {\r\n                    let mvBtn = document.createElement('div')\r\n                    mvBtn.innerHTML = myCatchedPokemons[pokemonIndex].moves[i]\r\n                    mvBtn.classList.add('move_button')\r\n                    if(i <= 3) {\r\n                        mvBtn.classList.add(\"move_active\")\r\n                    }\r\n                    moveList.appendChild(mvBtn)\r\n                }\r\n            }\r\n\r\n\r\n\r\n            // Funktion für Move ändern\r\n            const moveButtonClick = document.querySelectorAll('.move_button');\r\n            if (moveButtonClick) {\r\n                moveButtonClick.forEach((button, index) => {\r\n                    button.addEventListener('click', () => {\r\n                        if(index > 3) {\r\n                            if(is_LearningNewMove === false) {\r\n                                const confirmLerning = window.confirm(`Möchtest du, dass dein Pokemon die Attacke ${myCatchedPokemons[currentDetailPokemonIndex].moves[index]} erlernt?`)\r\n                                if(confirmLerning) {\r\n                                    is_LearningNewMove = true\r\n                                    newLearnedMoveIndex = index\r\n                                    // alert(\"Klicke auf die Attacke, welche verlernt werden soll. Keine sorge, dein Pokemon vergisst sie nicht vollständig.\")\r\n                                    modalMoves.classList.add(\"active\")\r\n                                    for(let i = 0; i <= 3; i++) {\r\n                                        document.getElementById(`mv_${i}`).innerHTML = myCatchedPokemons[pokemonIndex].moves[i]\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nif(btnCloseDetails) {\r\n    btnCloseDetails.addEventListener(\"click\", ()=> {\r\n        cont_Detail.classList.remove(\"active\");\r\n    })\r\n}\r\n\r\n\r\nif(mv_0) {\r\n    mv_0.addEventListener(\"click\", ()=> {\r\n        learn_forget_Attack(0)\r\n        modalMoves.classList.remove(\"active\")\r\n    })\r\n}\r\nif(mv_1) {\r\n    mv_1.addEventListener(\"click\", ()=> {\r\n        learn_forget_Attack(1)\r\n        modalMoves.classList.remove(\"active\")\r\n    })\r\n}\r\nif(mv_2) {\r\n    mv_2.addEventListener(\"click\", ()=> {\r\n        learn_forget_Attack(2)\r\n        modalMoves.classList.remove(\"active\")\r\n    })\r\n}\r\nif(mv_3) {\r\n    mv_3.addEventListener(\"click\", ()=> {\r\n        learn_forget_Attack(3)\r\n        modalMoves.classList.remove(\"active\")\r\n    })\r\n}\r\n\r\n\r\n // Attacke aufnehmen die vergessen werden soll und tauschen\r\nfunction learn_forget_Attack(forgotIndex) {\r\n    let teamPokemonIndex = -1;\r\n    const searchID = myCatchedPokemons[currentDetailPokemonIndex].unique_ID\r\n\r\n    for(let i = 0; i < myTeam.length; i++) {\r\n        if(myTeam[i].unique_ID === searchID) {\r\n            teamPokemonIndex = i;\r\n            break\r\n        }\r\n    }\r\n    const toForgetMoveName = myCatchedPokemons[currentDetailPokemonIndex].moves[forgotIndex]\r\n    const toLearnMoveName = myCatchedPokemons[currentDetailPokemonIndex].moves[newLearnedMoveIndex]\r\n    myCatchedPokemons[currentDetailPokemonIndex].moves.splice(forgotIndex, 1, toLearnMoveName)\r\n    myCatchedPokemons[currentDetailPokemonIndex].moves.splice(newLearnedMoveIndex, 1)\r\n    myCatchedPokemons[currentDetailPokemonIndex].moves.push(toForgetMoveName)\r\n\r\n    if(teamPokemonIndex !== -1) {\r\n        const toForgetMoveName = myTeam[teamPokemonIndex].moves[forgotIndex]\r\n        const toLearnMoveName = myTeam[teamPokemonIndex].moves[newLearnedMoveIndex]\r\n        myTeam[teamPokemonIndex].moves.splice(forgotIndex, 1, toLearnMoveName)\r\n        myTeam[teamPokemonIndex].moves.splice(newLearnedMoveIndex, 1)\r\n        myTeam[teamPokemonIndex].moves.push(toForgetMoveName)\r\n    }\r\n\r\n    is_LearningNewMove = false;\r\n    alert(`${makeFirstLetterBig(toLearnMoveName)} wurde erlernt und ${makeFirstLetterBig(toForgetMoveName)} wurde vergessen.`)\r\n    save_SaveObj();\r\n    cont_Detail.classList.remove(\"active\");\r\n}\r\n\r\n\r\n// Move Pokemon 1 pos down\r\nconst moveDownButton = document.querySelectorAll('.movedownButton');\r\nif (moveDownButton) {\r\n    moveDownButton.forEach((button) => {\r\n        button.addEventListener('click', () => {\r\n            let pokemonIndex = -1;\r\n            let movedPokemon;\r\n            for (let i = 0; i < myTeam.length; i++) {\r\n                if (button.id === myTeam[i].unique_ID) {\r\n                    pokemonIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (pokemonIndex >= 0) {\r\n                movedPokemon = myTeam[pokemonIndex];\r\n                myTeam.splice(pokemonIndex, 1);\r\n                myTeam.push(movedPokemon)\r\n                renderTeam();\r\n                save_SaveObj();\r\n                location.reload();\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction renderTeam() {\r\n    teamPokemonContainer.innerHTML = \"\";\r\n    for (let i = 0; i < myTeam.length; i++) {\r\n        let pokeCont = document.createElement('div');\r\n        pokeCont.classList.add(\"pokemonContaier\")\r\n        pokeCont.classList.add(\"tp\")\r\n\r\n        let delBtn = document.createElement(\"div\");\r\n        delBtn.innerHTML = \"-\"\r\n        delBtn.classList.add(\"deleteButton\")\r\n        delBtn.id = myTeam[i].unique_ID\r\n\r\n        let moveBtn = document.createElement('div');\r\n        moveBtn.innerHTML = '>'\r\n        moveBtn.classList.add(\"movedownButton\")\r\n        moveBtn.id = myTeam[i].unique_ID\r\n\r\n        let pokeimage = document.createElement(\"img\");\r\n        pokeimage.src = myTeam[i].spriteFront;\r\n        document.getElementById(`teamPoke_${i}`).src = myTeam[i].spriteFront\r\n        if(myTeam[i].isDefeated === true) {\r\n            document.getElementById(`teamPoke_${i}`).classList.add(\"defeat\");\r\n        }\r\n\r\n        let pokename = document.createElement(\"p\");\r\n        pokename.innerHTML = makeFirstLetterBig(myTeam[i].name);\r\n\r\n        let infocont = document.createElement(\"div\");\r\n        infocont.classList.add(\"infobox\");\r\n\r\n        let level = document.createElement(\"p\");\r\n        level.innerHTML = `Lv.${myTeam[i].level}`;\r\n\r\n        let type = document.createElement(\"p\");\r\n        type.innerHTML = `Typ: ${makeFirstLetterBig(myTeam[i].type)}`;\r\n\r\n        let number = document.createElement(\"p\");\r\n        number.innerHTML = `Nr. ${myTeam[i].id}`;\r\n\r\n        infocont.appendChild(level)\r\n        infocont.appendChild(type)\r\n        infocont.appendChild(number)\r\n\r\n        pokeCont.appendChild(delBtn)\r\n        pokeCont.appendChild(moveBtn)\r\n        pokeCont.appendChild(pokeimage)\r\n        // pokeCont.appendChild(pokename)\r\n        // pokeCont.appendChild(infocont)\r\n\r\n        teamPokemonContainer.appendChild(pokeCont)\r\n    }\r\n}\r\n\r\n\r\n// ######################################################\r\n// Lösche alles\r\nif(btn_ResetGame) {\r\n    btn_ResetGame.addEventListener(\"click\", ()=> {\r\n      const decision = window.confirm(\"Soll das Spiel wirklich zurückgesetzt werden? Der ganze Spielstand geht verloren!\");\r\n      if(decision) {\r\n        save_Object = {\r\n            today_Date: '',\r\n            myPokemonTeam: [],\r\n            myCatchedPokemons: [],\r\n            allFacedPokemons: [],\r\n            allPokemonMoves: [],\r\n            today_Pokemons: [],\r\n            items: {\r\n                pokeballs: 60,\r\n                money: 100,\r\n                beleber: 5,\r\n                trank: 5,\r\n                bonbon: 3\r\n            },\r\n            gen: 'all'\r\n        };\r\n\r\n        save_SaveObj();\r\n        location.reload();\r\n      }\r\n    })\r\n}\r\n\r\n\r\n\r\n//######################################################\r\n// Macht den Anfangsbuchstaben groß\r\n//######################################################\r\nfunction makeFirstLetterBig(word) {\r\n    const firstLetter = word[0];\r\n    let exportword = firstLetter.toUpperCase();\r\n    for (let i = 1; i < word.length; i++) {\r\n        exportword += word[i];\r\n    }\r\n    return exportword;\r\n}\r\n\r\n\r\nif(btnHeal){\r\n    btnHeal.addEventListener(\"click\", ()=> {\r\n        for(let i = 0; i < myTeam.length; i++) {\r\n            myTeam[i].isDefeated = false;\r\n            myTeam[i].hp = myTeam[i].maxHp;\r\n        }\r\n        for(let i = 0; i < myCatchedPokemons.length; i++) {\r\n            myCatchedPokemons[i].isDefeated = false;\r\n            myCatchedPokemons[i].hp = myCatchedPokemons[i].maxHp;\r\n        }\r\n\r\n        for(let i = 0; i < save_Object.myCatchedPokemons.length; i++) {\r\n            save_Object.myCatchedPokemons[i].hp = save_Object.myCatchedPokemons[i].maxHp;\r\n        }\r\n\r\n        for(let i = 0; i < save_Object.myPokemonTeam.length; i++) {\r\n            save_Object.myPokemonTeam[i].hp = save_Object.myPokemonTeam[i].maxHp;\r\n            document.getElementById(`teamPoke_${i}`).classList.remove(\"defeat\");\r\n        }\r\n\r\n        save_SaveObj();\r\n        alert(\"Deine Pokemon wurden geheilt\")\r\n    })\r\n}\r\n\r\n// #####################################################################\r\n// Shop\r\nlet pokeballBuyAmount = 0;\r\nlet shopMoney = 0;\r\n\r\n\r\n// Öffnen\r\nif(btn_open_Shop) {\r\n    btn_open_Shop.addEventListener(\"click\", ()=> {\r\n        shopWindow.classList.add(\"active\");\r\n        shopMoney = save_Object.items.money;\r\n        pokeballBuyAmount = 0;\r\n        btn_Pokeball.innerHTML = `Pokeball - ${pokeballPrice}$`\r\n        updateShop();\r\n    })\r\n}\r\n\r\n\r\n// Close\r\nif(btnCloseShop) {\r\n    btnCloseShop.addEventListener(\"click\", ()=> {\r\n        shopWindow.classList.remove(\"active\");\r\n    })\r\n}\r\n\r\n// Increase Pokeball\r\nif(btn_Pokeball) {\r\n    btn_Pokeball.addEventListener(\"click\", ()=> {\r\n        if(shopMoney >= pokeballPrice) {\r\n            pokeballBuyAmount++;\r\n            shopMoney -= pokeballPrice;\r\n            updateShop()\r\n        }\r\n    })\r\n}\r\n\r\n\r\nif(btn_Buy) {\r\n    btn_Buy.addEventListener(\"click\", ()=> {\r\n        if(pokeballBuyAmount > 0) {\r\n            save_Object.items.money = shopMoney;\r\n            save_Object.items.pokeballs += pokeballBuyAmount;\r\n            lbl_Money.innerHTML = `$ - ${save_Object.items.money}`;\r\n            save_SaveObj();\r\n            if(pokeballBuyAmount === 1) {\r\n                alert(`Du hast erfolgreich ${pokeballBuyAmount} Pokeball gekauft.`)\r\n            }else {\r\n                alert(`Du hast erfolgreich ${pokeballBuyAmount} Pokebälle gekauft.`)\r\n            }\r\n            shopWindow.classList.remove(\"active\");\r\n        }\r\n    })\r\n}\r\n\r\nfunction updateShop() {\r\n    lbl_Shop_Money.innerHTML = `$ - ${shopMoney}`;\r\n    lbl_Amount_Pokeballs.innerHTML = pokeballBuyAmount;\r\n}\r\n\r\n\r\n// Generation auswählen\r\n\r\nif(setting_Gen) {\r\n    setting_Gen.addEventListener(\"change\", ()=> {\r\n        const value = setting_Gen.value;\r\n        save_Object.gen = value;\r\n        resetPokemon()\r\n    })\r\n}\r\n\r\n\r\n\r\nif(btn_refresh_todays_Pokemon) {\r\n    btn_refresh_todays_Pokemon.addEventListener(\"click\", ()=> {\r\n        const request = window.confirm(\"Sollen die Pokemon von Heute neu gemischt werden?\")\r\n        if(request) {\r\n            resetPokemon()\r\n        }\r\n    })\r\n}\r\n\r\nfunction resetPokemon() {\r\n    save_Object.today_Date = '';\r\n    save_SaveObj()\r\n}\r\n\n\n//# sourceURL=webpack://project-template/./src/js/catchedPokemon.js?");

/***/ }),

/***/ "./src/js/game-map1.js":
/*!*****************************!*\
  !*** ./src/js/game-map1.js ***!
  \*****************************/
/***/ (() => {

eval("const canvas = document.getElementById('canvas');\r\nconst collisions = [\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 24025,\r\n    24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 24025, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 24025, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 24025, 24025, 24025, 24025, 24025,\r\n    24025, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 24025,\r\n    24025, 24025, 24025, 24025, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025,\r\n    0, 0, 0, 24025, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025,\r\n    24025, 24025, 0, 0, 0, 0, 0, 24025, 24025, 24025, 24025, 24025, 0, 0, 0, 0,\r\n    24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0,\r\n    24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0,\r\n    24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 24025, 24025, 24025,\r\n    24025, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0,\r\n    0, 0, 0, 0, 24025, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    24025, 24025, 24025, 24025, 24025, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 24025, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0,\r\n    24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 24025,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 24025, 0, 0, 0,\r\n    0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0,\r\n    24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0,\r\n    24025, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0,\r\n    24025, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0,\r\n    0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0,\r\n    0, 0, 0, 24025, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    24025, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 24025, 24025, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    24025, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 24025, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 24025, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 24025, 24025, 24025,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 24025, 24025,\r\n    24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025,\r\n    24025, 24025, 24025, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 24025, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 24025, 24025, 24025, 24025,\r\n    24025, 24025, 24025, 24025, 0, 0, 24025, 24025, 24025, 24025, 24025, 24025,\r\n    24025, 24025, 24025, 24025, 24025, 24025, 24025, 0, 0, 0, 0, 24025, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    24025, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24025, 24025, 24025, 24025,\r\n    24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025,\r\n    24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025,\r\n    24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025,\r\n    24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025,\r\n    24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 24025, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n];\r\n\r\nconst battleZoneData = [\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24026, 24026,\r\n    24026, 24026, 24026, 24026, 24026, 24026, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 24026, 24026, 24026, 24026, 24026, 24026, 24026, 24026, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 24026, 24026, 24026, 24026, 24026, 24026, 24026, 24026, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24026, 24026, 24026, 24026, 24026, 24026,\r\n    24026, 24026, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n];\r\n\r\nconst bttleEffect = document.getElementById('bttleEffect');\r\n\r\nlet lastPosition = {\r\n    x: 0,\r\n    y: 0,\r\n};\r\n\r\nlet save_Object = {\r\n    today_Date: '',\r\n    myPokemonTeam: [],\r\n    myCatchedPokemons: [],\r\n    allFacedPokemons: [],\r\n    allPokemonMoves: [],\r\n    today_Pokemons: [],\r\n    items: {\r\n        pokeballs: 60,\r\n        money: 100,\r\n        beleber: 5,\r\n        trank: 5,\r\n        bonbon: 3\r\n    },\r\n    gen: 'all'\r\n};\r\n\r\nlet myTeam = [];\r\n\r\nif (canvas) {\r\n\r\n    const activate_Gyroscope = document.getElementById(\"btn_Activate_Gyroscope\")\r\n    const outp_gyro = document.getElementById(\"outp_gyro\");\r\n\r\n    function handleOrientation(event) {\r\n        const alpha = event.alpha;\r\n        const beta = event.beta;\r\n        const gamma = event.gamma;\r\n        // Do stuff...\r\n        // outp_gyro.innerHTML = `alpha: ${alpha} | beta: ${beta} | gamma: ${gamma}`\r\n    }\r\n\r\n    activate_Gyroscope.addEventListener(\"click\", ()=> {\r\n        if (typeof DeviceMotionEvent.requestPermission === 'function') {\r\n            // Handle iOS 13+ devices.\r\n            DeviceMotionEvent.requestPermission()\r\n              .then((state) => {\r\n                if (state === 'granted') {\r\n                  window.addEventListener('devicemotion', handleOrientation);\r\n                  const rnd = Math.random()\r\n                  outp_gyro.innerHTML = `Macht was ${rnd}`\r\n                } else {\r\n                  console.error('Request to access the orientation was rejected');\r\n                }\r\n              })\r\n              .catch(console.error);\r\n          } else {\r\n            // Handle regular non iOS 13+ devices.\r\n            window.addEventListener('devicemotion', handleOrientation);\r\n          }\r\n    })\r\n\r\n\r\n\r\n    window.onload = init();\r\n\r\n    function init() {\r\n        if (document.getElementById(\"mapTag\")) {\r\n            load_SaveObj();\r\n        }\r\n    }\r\n\r\n    function load_SaveObj() {\r\n        if (localStorage.getItem('stored_save_Object') != null) {\r\n            save_Object = JSON.parse(localStorage.getItem('stored_save_Object'));\r\n            myTeam = save_Object.myPokemonTeam;\r\n\r\n            try {\r\n                renderTeam();\r\n            } catch (error) {}\r\n        }\r\n    }\r\n\r\n    function save_SaveObj() {\r\n        localStorage.setItem('stored_save_Object', JSON.stringify(save_Object));\r\n        console.log('SaveObj', save_Object);\r\n    }\r\n\r\n    function renderTeam() {\r\n        for (let i = 0; i < myTeam.length; i++) {\r\n            document.getElementById(`teamPoke_${i}`).src = myTeam[i].spriteFront;\r\n            if (myTeam[i].isDefeated === true) {\r\n                document.getElementById(`teamPoke_${i}`).classList.add('defeat');\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    canvas.width = 400;\r\n    canvas.height = 400;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    ////////////////////////////////////////////////////////\r\n    // Create Collision map\r\n    const collisionMap = [];\r\n    for (let i = 0; i < collisions.length; i += 70) {\r\n        collisionMap.push(collisions.slice(i, 70 + i));\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////\r\n    // Battlezone Map\r\n    const battlezoneMap = [];\r\n    for (let i = 0; i < battleZoneData.length; i += 70) {\r\n        battlezoneMap.push(battleZoneData.slice(i, 70 + i));\r\n    }\r\n    console.log(battlezoneMap);\r\n\r\n    class Boundary {\r\n        static width = 28;\r\n        static height = 28;\r\n        constructor({position}) {\r\n            this.position = position;\r\n            this.width = 28;\r\n            this.height = 28; // Weil 8 + 3.5 Zoomstufe bei TileMap\r\n        }\r\n\r\n        draw() {\r\n            ctx.fillStyle = 'rgba(255,0,0,0.0)';\r\n            ctx.fillRect(\r\n                this.position.x,\r\n                this.position.y,\r\n                this.width,\r\n                this.height,\r\n            );\r\n        }\r\n    }\r\n\r\n    const boundaries = [];\r\n    const offset = {\r\n        x: -500,\r\n        y: -100,\r\n    };\r\n    collisionMap.forEach((row, i) => {\r\n        row.forEach((symbol, j) => {\r\n            if (symbol === 24025) {\r\n                boundaries.push(\r\n                    new Boundary({\r\n                        position: {\r\n                            x: j * Boundary.width + offset.x,\r\n                            y: i * Boundary.height + offset.y,\r\n                        },\r\n                    }),\r\n                );\r\n            }\r\n        });\r\n    });\r\n\r\n    // ctx.fillStyle = 'white';\r\n    // ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    const battleZones = [];\r\n    battlezoneMap.forEach((row, i) => {\r\n        row.forEach((symbol, j) => {\r\n            if (symbol === 24026) {\r\n                battleZones.push(\r\n                    new Boundary({\r\n                        position: {\r\n                            x: j * Boundary.width + offset.x,\r\n                            y: i * Boundary.height + offset.y,\r\n                        },\r\n                    }),\r\n                );\r\n            }\r\n        });\r\n    });\r\n\r\n    console.log('battlezones', battleZones);\r\n\r\n    const image = new Image();\r\n    image.src = './assets/main-map.png';\r\n\r\n    const playerDownImage = new Image();\r\n    playerDownImage.src = './assets/playerDown.png';\r\n\r\n    const playerUpImage = new Image();\r\n    playerUpImage.src = './assets/playerUp.png';\r\n\r\n    const playerLeftImage = new Image();\r\n    playerLeftImage.src = './assets/playerLeft.png';\r\n\r\n    const playerRightImage = new Image();\r\n    playerRightImage.src = './assets/playerRight.png';\r\n\r\n    class Sprite {\r\n        constructor({\r\n            position,\r\n            velocity,\r\n            image,\r\n            frames = {max: 1},\r\n            sprites = [],\r\n        }) {\r\n            this.position = position;\r\n            this.image = image;\r\n            this.frames = {...frames, val: 0, elapsed: 0};\r\n\r\n            this.image.onload = () => {\r\n                this.width = this.image.width / this.frames.max;\r\n                this.height = this.image.height;\r\n            };\r\n            this.moving = false;\r\n            this.sprites = sprites;\r\n        }\r\n\r\n        draw() {\r\n            ctx.drawImage(\r\n                this.image,\r\n                this.frames.val * this.width,\r\n                0,\r\n                this.image.width / this.frames.max,\r\n                this.image.height,\r\n                this.position.x,\r\n                this.position.y,\r\n                this.image.width / this.frames.max,\r\n                this.image.height,\r\n            );\r\n            if (this.moving === true) {\r\n                if (this.frames.max > 1) {\r\n                    this.frames.elapsed++;\r\n                }\r\n                if (this.frames.elapsed % 10 === 0) {\r\n                    if (this.frames.val < this.frames.max - 1) {\r\n                        this.frames.val++;\r\n                    } else {\r\n                        this.frames.val = 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const player = new Sprite({\r\n        position: {\r\n            x: canvas.width / 2 - 183 / 3,\r\n            y: canvas.height / 2 - 62 / 2,\r\n        },\r\n        image: playerDownImage,\r\n        frames: {\r\n            max: 3,\r\n        },\r\n        sprites: {\r\n            up: playerUpImage,\r\n            left: playerLeftImage,\r\n            down: playerDownImage,\r\n            right: playerRightImage,\r\n        },\r\n    });\r\n\r\n    const background = new Sprite({\r\n        position: {\r\n            x: offset.x,\r\n            y: offset.y,\r\n        },\r\n        image: image,\r\n    });\r\n\r\n    const keys = {\r\n        w: {\r\n            pressed: false,\r\n        },\r\n        a: {\r\n            pressed: false,\r\n        },\r\n        s: {\r\n            pressed: false,\r\n        },\r\n        d: {\r\n            pressed: false,\r\n        },\r\n    };\r\n\r\n    const movables = [background, ...boundaries, ...battleZones];\r\n\r\n    function rectangularCollision({rectangle1, rectangle2}) {\r\n        return (\r\n            rectangle1.position.x + rectangle1.width >= rectangle2.position.x &&\r\n            rectangle1.position.x <= rectangle2.position.x + rectangle2.width &&\r\n            rectangle1.position.y <=\r\n                rectangle2.position.y + rectangle2.height &&\r\n            rectangle1.position.y + rectangle1.height >= rectangle2.position.y\r\n        );\r\n    }\r\n\r\n    const battle = {\r\n        initiated: false,\r\n    };\r\n\r\n    // Animation loop\r\n    function animate() {\r\n        window.requestAnimationFrame(animate);\r\n\r\n        // Draw Methods\r\n        background.draw();\r\n\r\n        battleZones.forEach((battlezone) => {\r\n            battlezone.draw();\r\n        });\r\n\r\n        player.draw();\r\n\r\n        boundaries.forEach((boundary) => {\r\n            boundary.draw();\r\n        });\r\n\r\n        let moving = true;\r\n        player.moving = false;\r\n\r\n        if (battle.initiated) return;\r\n        if (keys.w.pressed && lastKey === 'w') {\r\n            player.moving = true;\r\n            player.image = player.sprites.up;\r\n            for (let i = 0; i < boundaries.length; i++) {\r\n                const boundary = boundaries[i];\r\n                if (\r\n                    rectangularCollision({\r\n                        rectangle1: player,\r\n                        rectangle2: {\r\n                            ...boundary,\r\n                            position: {\r\n                                x: boundary.position.x,\r\n                                y: boundary.position.y + 3,\r\n                            },\r\n                        },\r\n                    })\r\n                ) {\r\n                    moving = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Collision Detection for Battlezone\r\n            for (let i = 0; i < battleZones.length; i++) {\r\n                const battleZone = battleZones[i];\r\n                if (\r\n                    rectangularCollision({\r\n                        rectangle1: player,\r\n                        rectangle2: battleZone,\r\n                    })\r\n                ) {\r\n                    const rnd_BattleTrigger = Math.random();\r\n                    if (rnd_BattleTrigger < 0.01) {\r\n                        battle.initiated = true;\r\n                        player.moving = false;\r\n                        bttleEffect.classList.add('active');\r\n                        setTimeout(() => {\r\n                            window.location = 'battle.html';\r\n                        }, 2000);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            if (moving)\r\n                movables.forEach((movable) => {\r\n                    movable.position.y += 3;\r\n                    lastPosition.y = movable.position.y;\r\n                    console.log('x:', lastPosition.x,' y:',  lastPosition.y);\r\n                });\r\n        } else if (keys.a.pressed && lastKey === 'a') {\r\n            player.moving = true;\r\n            player.image = player.sprites.left;\r\n            for (let i = 0; i < boundaries.length; i++) {\r\n                const boundary = boundaries[i];\r\n                if (\r\n                    rectangularCollision({\r\n                        rectangle1: player,\r\n                        rectangle2: {\r\n                            ...boundary,\r\n                            position: {\r\n                                x: boundary.position.x + 3,\r\n                                y: boundary.position.y,\r\n                            },\r\n                        },\r\n                    })\r\n                ) {\r\n                    moving = false;\r\n                    break;\r\n                }\r\n            }\r\n            // Collision Detection for Battlezone\r\n            for (let i = 0; i < battleZones.length; i++) {\r\n                const battleZone = battleZones[i];\r\n                if (\r\n                    rectangularCollision({\r\n                        rectangle1: player,\r\n                        rectangle2: battleZone,\r\n                    })\r\n                ) {\r\n                    const rnd_BattleTrigger = Math.random();\r\n                    if (rnd_BattleTrigger < 0.01) {\r\n                        battle.initiated = true;\r\n                        player.moving = false;\r\n                        bttleEffect.classList.add('active');\r\n                        setTimeout(() => {\r\n                            window.location = 'battle.html';\r\n                        }, 2000);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            if (moving)\r\n                movables.forEach((movable) => {\r\n                    movable.position.x += 3;\r\n                    lastPosition.x = movable.position.x;\r\n                    console.log('x:', lastPosition.x,' y:',  lastPosition.y);\r\n                });\r\n        } else if (keys.s.pressed && lastKey === 's') {\r\n            player.moving = true;\r\n            player.image = player.sprites.down;\r\n            for (let i = 0; i < boundaries.length; i++) {\r\n                const boundary = boundaries[i];\r\n                if (\r\n                    rectangularCollision({\r\n                        rectangle1: player,\r\n                        rectangle2: {\r\n                            ...boundary,\r\n                            position: {\r\n                                x: boundary.position.x,\r\n                                y: boundary.position.y - 3,\r\n                            },\r\n                        },\r\n                    })\r\n                ) {\r\n                    moving = false;\r\n                    break;\r\n                }\r\n            }\r\n            // Collision Detection for Battlezone\r\n            for (let i = 0; i < battleZones.length; i++) {\r\n                const battleZone = battleZones[i];\r\n                if (\r\n                    rectangularCollision({\r\n                        rectangle1: player,\r\n                        rectangle2: battleZone,\r\n                    })\r\n                ) {\r\n                    const rnd_BattleTrigger = Math.random();\r\n                    if (rnd_BattleTrigger < 0.01) {\r\n                        battle.initiated = true;\r\n                        player.moving = false;\r\n                        bttleEffect.classList.add('active');\r\n                        setTimeout(() => {\r\n                            window.location = 'battle.html';\r\n                        }, 2000);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            if (moving)\r\n                movables.forEach((movable) => {\r\n                    movable.position.y -= 3;\r\n                    lastPosition.y = movable.position.y;\r\n                    console.log('x:', lastPosition.x,' y:',  lastPosition.y);\r\n                });\r\n        } else if (keys.d.pressed && lastKey === 'd') {\r\n            player.moving = true;\r\n            player.image = player.sprites.right;\r\n            for (let i = 0; i < boundaries.length; i++) {\r\n                const boundary = boundaries[i];\r\n                if (\r\n                    rectangularCollision({\r\n                        rectangle1: player,\r\n                        rectangle2: {\r\n                            ...boundary,\r\n                            position: {\r\n                                x: boundary.position.x - 3,\r\n                                y: boundary.position.y,\r\n                            },\r\n                        },\r\n                    })\r\n                ) {\r\n                    moving = false;\r\n                    break;\r\n                }\r\n            }\r\n            // Collision Detection for Battlezone\r\n            for (let i = 0; i < battleZones.length; i++) {\r\n                const battleZone = battleZones[i];\r\n                if (\r\n                    rectangularCollision({\r\n                        rectangle1: player,\r\n                        rectangle2: battleZone,\r\n                    })\r\n                ) {\r\n                    const rnd_BattleTrigger = Math.random();\r\n                    if (rnd_BattleTrigger < 0.01) {\r\n                        battle.initiated = true;\r\n                        player.moving = false;\r\n                        bttleEffect.classList.add('active');\r\n                        setTimeout(() => {\r\n                            window.location = 'battle.html';\r\n                        }, 2000);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            if (moving)\r\n                movables.forEach((movable) => {\r\n                    movable.position.x -= 3;\r\n                    lastPosition.x = movable.position.x;\r\n                    console.log('x:', lastPosition.x,' y:',  lastPosition.y);\r\n                });\r\n        }\r\n    }\r\n\r\n    animate();\r\n\r\n    let lastKey = '';\r\n    window.addEventListener('keydown', (e) => {\r\n        switch (e.key) {\r\n            case 'w':\r\n                keys.w.pressed = true;\r\n                lastKey = 'w';\r\n                break;\r\n            case 'a':\r\n                keys.a.pressed = true;\r\n                lastKey = 'a';\r\n                break;\r\n            case 's':\r\n                keys.s.pressed = true;\r\n                lastKey = 's';\r\n                break;\r\n            case 'd':\r\n                keys.d.pressed = true;\r\n                lastKey = 'd';\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n\r\n    ////////////////////////////////////////////////////////\r\n    // Klasse um gedrückte Taste triggern\r\n    class ClickAndHold {\r\n        constructor(EventTarget, callback) {\r\n            this.EventTarget = EventTarget;\r\n            this.callback = callback;\r\n            this.isHeld = false;\r\n            this.activeHoldTimeoutId = null;\r\n\r\n            ['mousedown', 'touchstart'].forEach((type) => {\r\n                this.EventTarget.addEventListener(\r\n                    type,\r\n                    this._onHoldStart.bind(this),\r\n                );\r\n            });\r\n\r\n            [\r\n                'mouseup',\r\n                'mouseleave',\r\n                'mouseout',\r\n                'touchend',\r\n                'touchcancel',\r\n            ].forEach((type) => {\r\n                this.EventTarget.addEventListener(\r\n                    type,\r\n                    this._onHoldEnd.bind(this),\r\n                );\r\n            });\r\n        }\r\n\r\n        _onHoldStart() {\r\n            this.isHeld = true;\r\n\r\n            this.activeHoldTimeoutId = setTimeout(() => {\r\n                if (this.isHeld) {\r\n                    this.callback();\r\n                }\r\n            }, 200);\r\n        }\r\n\r\n        _onHoldEnd() {\r\n            this.isHeld = false;\r\n            clearTimeout(this.activeHoldTimeoutId);\r\n            keys.w.pressed = false;\r\n            keys.a.pressed = false;\r\n            keys.s.pressed = false;\r\n            keys.d.pressed = false;\r\n        }\r\n    }\r\n\r\n    const upBtn = document.getElementById('up');\r\n    const leftBtn = document.getElementById('left');\r\n    const downBtn = document.getElementById('down');\r\n    const rightBtn = document.getElementById('right');\r\n\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n        document.querySelector('div').addEventListener(\r\n            'contextmenu',\r\n            function (e) {\r\n                // Alternative\r\n                e.preventDefault();\r\n            },\r\n            false,\r\n        );\r\n    });\r\n\r\n    new ClickAndHold(upBtn, () => {\r\n        keys.w.pressed = true;\r\n        lastKey = 'w';\r\n    });\r\n    new ClickAndHold(leftBtn, () => {\r\n        keys.a.pressed = true;\r\n        lastKey = 'a';\r\n    });\r\n    new ClickAndHold(downBtn, () => {\r\n        keys.s.pressed = true;\r\n        lastKey = 's';\r\n    });\r\n    new ClickAndHold(rightBtn, () => {\r\n        keys.d.pressed = true;\r\n        lastKey = 'd';\r\n    });\r\n\r\n    ////////////////////////////////////////////////////////\r\n\r\n    window.addEventListener('keyup', (e) => {\r\n        switch (e.key) {\r\n            case 'w':\r\n                keys.w.pressed = false;\r\n                break;\r\n            case 'a':\r\n                keys.a.pressed = false;\r\n                break;\r\n            case 's':\r\n                keys.s.pressed = false;\r\n                break;\r\n            case 'd':\r\n                keys.d.pressed = false;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://project-template/./src/js/game-map1.js?");

/***/ }),

/***/ "./src/js/pokedex.js":
/*!***************************!*\
  !*** ./src/js/pokedex.js ***!
  \***************************/
/***/ (() => {

eval("facedPokemons = [];\r\nlet myTeam = [];\r\nlet pokemonByID = []\r\n\r\nlet save_Object = {\r\n    today_Date: '',\r\n    myPokemonTeam: [],\r\n    myCatchedPokemons: [],\r\n    allFacedPokemons: [],\r\n    allPokemonMoves: [],\r\n    today_Pokemons: [],\r\n    items: {\r\n        pokeballs: 60,\r\n        money: 100,\r\n        beleber: 5,\r\n        trank: 5,\r\n        bonbon: 3\r\n    },\r\n    gen: 'all'\r\n};\r\n\r\nwindow.onload = init();\r\n\r\nfunction init() {\r\n    if (document.getElementById('pokedexTag')) {\r\n        loadFacedPokemons();\r\n    }\r\n}\r\n\r\nfunction loadFacedPokemons() {\r\n    if (localStorage.getItem('stored_save_Object') != null) {\r\n        save_Object = JSON.parse(localStorage.getItem('stored_save_Object'));\r\n        facedPokemons = save_Object.allFacedPokemons;\r\n        console.log('facedPokemons', facedPokemons);\r\n        pokemonByID = facedPokemons.slice(0);\r\n        pokemonByID.sort(function(a,b) {\r\n            return a.id - b.id;\r\n        });\r\n\r\n        myTeam = save_Object.myPokemonTeam;\r\n        loadMyTeam();\r\n        renderPokeCards();\r\n    }else {\r\n        console.log('Konnte nicht geladen werden');\r\n    }\r\n}\r\n\r\n//myPokemonTeam\r\nfunction loadMyTeam() {\r\n    for (let i = 0; i < myTeam.length; i++) {\r\n        document.getElementById(`teamPoke_${i}`).src = myTeam[i].spriteFront;\r\n    }\r\n}\r\n\r\nfunction renderPokeCards() {\r\n    let pokeId = 0;\r\n    let pokename = '';\r\n    let pokelevel = 0;\r\n    let poketype = '';\r\n\r\n    console.log(facedPokemons);\r\n\r\n    for (let i = 0; i < pokemonByID.length; i++) {\r\n        pokeId = pokemonByID[i].id;\r\n        pokename = pokemonByID[i].name;\r\n        pokelevel = pokemonByID[i].level;\r\n        poketype = pokemonByID[i].type;\r\n        buildCard(pokeId, pokename, pokelevel, poketype);\r\n    }\r\n}\r\n\r\nfunction buildCard(id, name, level, type) {\r\n    let cont = document.createElement('div');\r\n    let txtlbl = document.createElement('p');\r\n    let imgP = document.createElement('img');\r\n    txtlbl.innerText = `${makeFirstLetterBig(name)} Nr.${id} \\n Typ: ${makeFirstLetterBig(type)}`;\r\n    txtlbl.classList.add('pokedexName');\r\n    imgP.src = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`;\r\n    cont.appendChild(imgP);\r\n    cont.appendChild(document.createTextNode(name));\r\n    cont.classList.add('container');\r\n    cont.classList.add(addColorClass(type));\r\n    cont.appendChild(txtlbl);\r\n    let card = document.getElementById('cards');\r\n    card.appendChild(cont);\r\n}\r\n\r\nfunction addColorClass(type) {\r\n    if (type === '') {\r\n    }\r\n\r\n    switch (type) {\r\n        case 'fire':\r\n            return 'orangeContainer';\r\n            break;\r\n        case 'water':\r\n            return 'blueContainer';\r\n            break;\r\n        case 'bug':\r\n            return 'greenContainer';\r\n            break;\r\n        case 'grass':\r\n            return 'greenContainer';\r\n            break;\r\n        case 'ground':\r\n            return 'brownContainer';\r\n            break;\r\n        case 'poison':\r\n            return 'purpleContainer';\r\n            break;\r\n        case 'rock':\r\n            return 'brownContainer';\r\n            break;\r\n        case 'electric':\r\n            return 'yellowContainer';\r\n            break;\r\n\r\n        default:\r\n            return 'greyContainer';\r\n            break;\r\n    }\r\n}\r\n\r\n\r\n//######################################################\r\n// Macht den Anfangsbuchstaben groß\r\n//######################################################\r\nfunction makeFirstLetterBig(word) {\r\n    const firstLetter = word[0];\r\n    let exportword = firstLetter.toUpperCase();\r\n    for (let i = 1; i < word.length; i++) {\r\n        exportword += word[i];\r\n    }\r\n    return exportword;\r\n}\r\n\n\n//# sourceURL=webpack://project-template/./src/js/pokedex.js?");

/***/ }),

/***/ "./src/js/script.js":
/*!**************************!*\
  !*** ./src/js/script.js ***!
  \**************************/
/***/ (() => {

eval("const menueButton = document.getElementById(\"btn_Menue\");\r\nconst menueWindow = document.getElementById(\"windowMenu\");\r\nconst menueCloseButton = document.getElementById(\"btnCloseMenue\");\r\n// const inx = document.getElementById(\"inx\")\r\nconst startButton = document.getElementById(\"btnStartGame\")\r\n\r\nwindow.onload = init();\r\n\r\n\r\nfunction init() {\r\n    if(startButton) {\r\n        startButton.addEventListener(\"click\", ()=> {\r\n            window.location = 'map1.html'\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nif(menueButton) {\r\n    menueButton.addEventListener(\"click\", ()=> {\r\n            menueWindow.classList.add(\"active\")\r\n    })\r\n}\r\n\r\n\r\nif(menueCloseButton) {\r\n    menueCloseButton.addEventListener(\"click\", ()=> {\r\n            menueWindow.classList.remove(\"active\")\r\n    })\r\n}\r\n\n\n//# sourceURL=webpack://project-template/./src/js/script.js?");

/***/ }),

/***/ "./src/js/store.js":
/*!*************************!*\
  !*** ./src/js/store.js ***!
  \*************************/
/***/ (() => {

eval("\n\n//# sourceURL=webpack://project-template/./src/js/store.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;